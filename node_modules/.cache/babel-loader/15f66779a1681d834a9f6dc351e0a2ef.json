{"ast":null,"code":"export const calculateFlightEmissions = function (selectedAirports, passengers) {\n  let legs = [];\n  let max = selectedAirports.length - 1;\n\n  for (let key2 = 0; key2 < max; key2++) {\n    var key3 = key2 + 1;\n    let temporaryLeg = {\n      departure_airport: selectedAirports[key2],\n      destination_airport: selectedAirports[key3]\n    };\n    legs.push(temporaryLeg);\n  }\n\n  console.log(legs);\n  const options = {\n    method: \"POST\",\n    headers: {\n      Authorization: \"Bearer 5tNfPXfVrKecROWIDgvSg\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      type: \"flight\",\n      passengers: passengers,\n      legs: legs\n    })\n  };\n  return fetch(\"https://www.carboninterface.com/api/v1/estimates\", options).then(response => response.json()).then(responseText => {\n    console.log(\"results\");\n    console.log(responseText.data.attributes);\n    return responseText.data.attributes;\n  });\n};","map":{"version":3,"names":["calculateFlightEmissions","selectedAirports","passengers","legs","max","length","key2","key3","temporaryLeg","departure_airport","destination_airport","push","console","log","options","method","headers","Authorization","body","JSON","stringify","type","fetch","then","response","json","responseText","data","attributes"],"sources":["/Users/abhijayrana/emissioncalc/src/components/FlightEmission.jsx"],"sourcesContent":["export const calculateFlightEmissions = function(selectedAirports, passengers) {\n    let legs = []\n    let max = selectedAirports.length-1\n    for (let key2 = 0; key2<max; key2++) {\n        var key3 = key2+1\n        let temporaryLeg = {\n                departure_airport: selectedAirports[key2],\n                destination_airport: selectedAirports[key3]\n        }\n        legs.push(temporaryLeg)\n    }\n    console.log(legs)\n    const options = {\n        method: \"POST\",\n        headers: {\n            Authorization: \"Bearer 5tNfPXfVrKecROWIDgvSg\",\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n            type: \"flight\",\n            passengers: passengers,\n            legs: legs,\n        }),\n    }\n    return fetch(\"https://www.carboninterface.com/api/v1/estimates\", options)\n        .then((response) => response.json())\n        .then((responseText) => {\n            console.log(\"results\")\n            console.log(responseText.data.attributes)\n            return responseText.data.attributes\n        })\n    \n}\n"],"mappings":"AAAA,OAAO,MAAMA,wBAAwB,GAAG,UAASC,gBAAT,EAA2BC,UAA3B,EAAuC;EAC3E,IAAIC,IAAI,GAAG,EAAX;EACA,IAAIC,GAAG,GAAGH,gBAAgB,CAACI,MAAjB,GAAwB,CAAlC;;EACA,KAAK,IAAIC,IAAI,GAAG,CAAhB,EAAmBA,IAAI,GAACF,GAAxB,EAA6BE,IAAI,EAAjC,EAAqC;IACjC,IAAIC,IAAI,GAAGD,IAAI,GAAC,CAAhB;IACA,IAAIE,YAAY,GAAG;MACXC,iBAAiB,EAAER,gBAAgB,CAACK,IAAD,CADxB;MAEXI,mBAAmB,EAAET,gBAAgB,CAACM,IAAD;IAF1B,CAAnB;IAIAJ,IAAI,CAACQ,IAAL,CAAUH,YAAV;EACH;;EACDI,OAAO,CAACC,GAAR,CAAYV,IAAZ;EACA,MAAMW,OAAO,GAAG;IACZC,MAAM,EAAE,MADI;IAEZC,OAAO,EAAE;MACLC,aAAa,EAAE,8BADV;MAEL,gBAAgB;IAFX,CAFG;IAMZC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACjBC,IAAI,EAAE,QADW;MAEjBnB,UAAU,EAAEA,UAFK;MAGjBC,IAAI,EAAEA;IAHW,CAAf;EANM,CAAhB;EAYA,OAAOmB,KAAK,CAAC,kDAAD,EAAqDR,OAArD,CAAL,CACFS,IADE,CACIC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADjB,EAEFF,IAFE,CAEIG,YAAD,IAAkB;IACpBd,OAAO,CAACC,GAAR,CAAY,SAAZ;IACAD,OAAO,CAACC,GAAR,CAAYa,YAAY,CAACC,IAAb,CAAkBC,UAA9B;IACA,OAAOF,YAAY,CAACC,IAAb,CAAkBC,UAAzB;EACH,CANE,CAAP;AAQH,CAhCM"},"metadata":{},"sourceType":"module"}