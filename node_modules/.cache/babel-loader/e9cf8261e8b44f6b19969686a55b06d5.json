{"ast":null,"code":"var _jsxFileName = \"/Users/abhijayrana/emissioncalc/src/components/Flight.jsx\";\nimport React from \"react\";\nimport { Component } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport Box from \"@mui/material/Box\";\nimport { Button, CardContent } from \"@mui/material\";\nimport { airportlist } from \"./AirportData.jsx\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\nimport { calculateFlightEmissions } from \"./FlightEmission.jsx\";\nimport Table from \"@mui/material/Table\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableBody from \"@mui/material/TableBody\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport Card from \"@mui/material/Card\";\nimport { GoogleMap, LoadScript, PolylineF, MarkerF, Marker } from '@react-google-maps/api'; //import useStyles from \"./styles.jsx\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst center = {\n  lat: 20,\n  lng: -20\n};\n\nclass Flight extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {};\n\n    this.createData = (column, otherColumn) => {\n      return {\n        column,\n        otherColumn\n      };\n    };\n\n    this.handlePassengers = event => {\n      this.setState({\n        passengers: event.target.value\n      }, () => {\n        console.log(this.state.passengers);\n        let demobool = false;\n        let legarray = [];\n        let coordinateArray = [];\n        let loopervar = this.state.airportsinvolved;\n\n        for (let key2 = 0; key2 < loopervar; key2++) {\n          if (this.state.legs[`${key2}`] && this.state.legs[`${key2}`] != null) {\n            console.log(\"a\");\n            demobool = true;\n            legarray.push(this.state.legs[`${key2}`][\"code\"]);\n            let lat = parseInt(this.state.legs[`${key2}`]['lat']);\n            let lng = parseInt(this.state.legs[`${key2}`]['lon']);\n            let coordinatesObject = {\n              lat: lat,\n              lng: lng\n            };\n            coordinateArray.push(coordinatesObject);\n          } else {\n            demobool = false;\n          }\n        }\n\n        if (demobool == true) {\n          calculateFlightEmissions(legarray, this.state.passengers).then(emissions => {\n            this.setState({\n              emissions: emissions,\n              pathCoordinates: coordinateArray\n            }, () => {\n              console.log(\"worked gg\");\n              console.log(this.state.emissions);\n              console.log(\"coordiantes haha\");\n              console.log(this.state.pathCoordinates);\n            });\n          });\n        }\n      });\n    };\n\n    this.handleOrigin = (event, values) => {\n      if (values != null) {\n        let templegs = this.state.legs;\n        templegs[\"0\"] = values;\n        this.setState({\n          legs: templegs\n        }, () => {\n          console.log(this.state.legs);\n        });\n        let demobool = false;\n        let legarray = [];\n        let loopervar = this.state.airportsinvolved;\n        let coordinateArray = [];\n\n        for (let key2 = 0; key2 < loopervar; key2++) {\n          if (this.state.legs[`${key2}`] && this.state.legs[`${key2}`] != null) {\n            console.log(\"a\");\n            demobool = true;\n            legarray.push(this.state.legs[`${key2}`][\"code\"]);\n            let lat = parseInt(this.state.legs[`${key2}`]['lat']);\n            let lng = parseInt(this.state.legs[`${key2}`]['lon']);\n            let coordinatesObject = {\n              lat: lat,\n              lng: lng\n            };\n            coordinateArray.push(coordinatesObject);\n          } else {\n            demobool = false;\n          }\n        }\n\n        if (demobool == true) {\n          calculateFlightEmissions(legarray, this.state.passengers).then(emissions => {\n            this.setState({\n              emissions: emissions,\n              pathCoordinates: coordinateArray\n            }, () => {\n              console.log(\"worked gg\");\n              console.log(this.state.emissions);\n              console.log(\"coordiantes haha\");\n              console.log(this.state.pathCoordinates);\n            });\n          });\n        }\n      }\n    };\n\n    this.handleDestination = (event, values) => {\n      if (values != null) {\n        let templegs = this.state.legs;\n        templegs[\"1\"] = values;\n        this.setState({\n          legs: templegs\n        }, () => {\n          console.log(this.state.legs);\n        });\n        let demobool = false;\n        let legarray = [];\n        let loopervar = this.state.airportsinvolved;\n        let coordinateArray = [];\n\n        for (let key2 = 0; key2 < loopervar; key2++) {\n          if (this.state.legs[`${key2}`] != \"\" && this.state.legs[`${key2}`] != null) {\n            demobool = true;\n            legarray.push(this.state.legs[`${key2}`][\"code\"]);\n            let lat = parseInt(this.state.legs[`${key2}`]['lat']);\n            let lng = parseInt(this.state.legs[`${key2}`]['lon']);\n            let coordinatesObject = {\n              lat: lat,\n              lng: lng\n            };\n            coordinateArray.push(coordinatesObject);\n          } else {\n            demobool = false;\n          }\n        }\n\n        if (demobool == true) {\n          calculateFlightEmissions(legarray, this.state.passengers).then(emissions => {\n            this.setState({\n              emissions: emissions,\n              pathCoordinates: coordinateArray\n            }, () => {\n              console.log(\"worked gg\");\n              console.log(this.state.emissions);\n              console.log(\"coordiantes haha\");\n              console.log(this.state.pathCoordinates);\n            });\n          });\n        }\n      }\n    };\n\n    this.handleAddLeg = () => {\n      if (this.state.airportsinvolved < 4) {\n        let addleg = this.state.airportsinvolved + 1;\n        this.setState({\n          airportsinvolved: addleg\n        }, () => {\n          console.log(this.state.airportsinvolved);\n\n          if (this.state.airportsinvolved == 3) {\n            this.setState({\n              airporttwo: \"Leg One\"\n            }, () => {\n              console.log(this.state.airporttwo);\n            });\n          } else if (this.state.airportsinvolved == 4) {\n            this.setState({\n              airportthree: \"Leg Two\"\n            }, () => {\n              console.log(this.state.airportthree);\n            });\n          }\n        });\n      } else {\n        alert(\"you really that broke you needa fly 5 connections bruh\");\n      }\n    };\n\n    this.handleRemLeg = () => {\n      if (this.state.airportsinvolved > 2) {\n        let remleg = this.state.airportsinvolved - 1;\n        this.setState({\n          airportsinvolved: remleg\n        }, () => {\n          if (this.state.airportsinvolved == 3) {\n            this.setState({\n              airportthree: \"Destination\"\n            }, () => {\n              console.log(this.state.airportthree);\n            });\n          } else if (this.state.airportsinvolved == 2) {\n            this.setState({\n              airporttwo: \"Destination\"\n            }, () => {\n              console.log(this.state.airporttwo);\n            });\n          }\n\n          console.log(this.state.airportsinvolved);\n          let demobool = false;\n          let legarray = [];\n          let loopervar = this.state.airportsinvolved;\n          let coordinateArray = [];\n\n          for (let key2 = 0; key2 < loopervar; key2++) {\n            if (this.state.legs[`${key2}`] != \"\" && this.state.legs[`${key2}`] != null) {\n              demobool = true;\n              legarray.push(this.state.legs[`${key2}`][\"code\"]);\n              let lat = parseInt(this.state.legs[`${key2}`]['lat']);\n              let lng = parseInt(this.state.legs[`${key2}`]['lon']);\n              let coordinatesObject = {\n                lat: lat,\n                lng: lng\n              };\n              coordinateArray.push(coordinatesObject);\n            } else {\n              demobool = false;\n            }\n          }\n\n          if (demobool == true) {\n            calculateFlightEmissions(legarray, this.state.passengers).then(emissions => {\n              this.setState({\n                emissions: emissions,\n                pathCoordinates: coordinateArray\n              }, () => {\n                console.log(\"worked gg\");\n                console.log(this.state.emissions);\n                console.log(\"coordiantes haha\");\n                console.log(this.state.pathCoordinates);\n              });\n            });\n          }\n        });\n      } else {\n        alert(\"you needa fly to another airport 🤦‍♂️\");\n      }\n    };\n\n    this.handleAddedLeg = (event, values) => {\n      if (values != null) {\n        let templegs = this.state.legs;\n        templegs[\"2\"] = values;\n        this.setState({\n          legs: templegs\n        }, () => {\n          console.log(this.state.legs);\n        });\n        let demobool = false;\n        let legarray = [];\n        let loopervar = this.state.airportsinvolved;\n        let coordinateArray = [];\n\n        for (let key2 = 0; key2 < loopervar; key2++) {\n          if (this.state.legs[`${key2}`] != \"\" && this.state.legs[`${key2}`] != null) {\n            demobool = true;\n            legarray.push(this.state.legs[`${key2}`][\"code\"]);\n            let lat = parseInt(this.state.legs[`${key2}`]['lat']);\n            let lng = parseInt(this.state.legs[`${key2}`]['lon']);\n            let coordinatesObject = {\n              lat: lat,\n              lng: lng\n            };\n            coordinateArray.push(coordinatesObject);\n          } else {\n            demobool = false;\n          }\n        }\n\n        if (demobool == true) {\n          calculateFlightEmissions(legarray, this.state.passengers).then(emissions => {\n            this.setState({\n              emissions: emissions,\n              pathCoordinates: coordinateArray\n            }, () => {\n              console.log(\"worked gg\");\n              console.log(this.state.emissions);\n            });\n          });\n        }\n      }\n    };\n\n    this.handleFinalLeg = (event, values) => {\n      if (values != null) {\n        let templegs = this.state.legs;\n        templegs[\"3\"] = values;\n        this.setState({\n          legs: templegs\n        }, () => {\n          console.log(this.state.legs);\n        });\n        let demobool = false;\n        let legarray = [];\n        let loopervar = this.state.airportsinvolved;\n        let coordinateArray = [];\n\n        for (let key2 = 0; key2 < loopervar; key2++) {\n          if (this.state.legs[`${key2}`] != \"\" && this.state.legs[`${key2}`] != null) {\n            demobool = true;\n            legarray.push(this.state.legs[`${key2}`][\"code\"]);\n            let lat = parseInt(this.state.legs[`${key2}`]['lat']);\n            let lng = parseInt(this.state.legs[`${key2}`]['lon']);\n            let coordinatesObject = {\n              lat: lat,\n              lng: lng\n            };\n            coordinateArray.push(coordinatesObject);\n          } else {\n            demobool = false;\n          }\n        }\n\n        if (demobool == true) {\n          calculateFlightEmissions(legarray, this.state.passengers).then(emissions => {\n            this.setState({\n              emissions: emissions,\n              pathCoordinates: coordinateArray\n            }, () => {\n              console.log(\"worked gg\");\n              console.log(this.state.emissions);\n            });\n          });\n        }\n      }\n    };\n\n    this.state = {\n      legs: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\"\n      },\n      selectedOrigin: \"\",\n      selectedDestination: \"\",\n      selectedAddedLeg: \"\",\n      selectedFinalLeg: \"\",\n      airportsinvolved: 2,\n      passengers: 2,\n      emissions: \"\",\n      leftcolumn: [\"Legs Involved\", \"Airports\", \"Distance\", \"Units\", \"Date of Estimation\", \"Carbon in Grams\", \"Carbon in Pounds\", \"Carbon in Kilograms\", \"Carbon in Metric Tons\"],\n      airporttwo: \"Destination\",\n      airportthree: \"Destination\",\n      pathCoordinates: \"\",\n      isFLightNumber: false\n    };\n    this.handleOrigin = this.handleOrigin.bind(this);\n    this.handleDestination = this.handleDestination.bind(this);\n  }\n\n  render() {\n    let addedlegone = \"\";\n\n    if (this.state.airportsinvolved >= 3) {\n      addedlegone = /*#__PURE__*/_jsxDEV(Autocomplete, {\n        disablePortal: true,\n        id: \"airport-leg3-autofill\",\n        autoHighlight: true,\n        getOptionLabel: option => `${option.name} (${option.code})`,\n        options: airportlist,\n        sx: {\n          width: \"auto\"\n        },\n        renderOption: (props, option) => /*#__PURE__*/_jsxDEV(Box, {\n          component: \"li\",\n          ...props,\n          children: [option.name, \" \", option.city, \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: option.code\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 13\n        }, this),\n        onChange: this.handleAddedLeg,\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n          label: this.state.airportthree\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this);\n    }\n\n    let addedfinalleg = \"\";\n\n    if (this.state.airportsinvolved >= 4) {\n      addedfinalleg = /*#__PURE__*/_jsxDEV(Autocomplete, {\n        disablePortal: true,\n        id: \"airport-leg3-autofill\",\n        autoHighlight: true,\n        getOptionLabel: option => `${option.name} (${option.code})`,\n        options: airportlist,\n        sx: {\n          width: \"auto\"\n        },\n        renderOption: (props, option) => /*#__PURE__*/_jsxDEV(Box, {\n          component: \"li\",\n          ...props,\n          children: [option.name, \" \", option.city, \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: option.code\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 13\n        }, this),\n        onChange: this.handleFinalLeg,\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n          label: \"Destination\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this);\n    }\n\n    let results = \"\";\n\n    if (this.state.emissions) {\n      results = JSON.stringify(this.state.emissions);\n    }\n\n    let leftcolumn = [\"Passengers\", \"Airports\", \"Distance\", \"Carbon in Pounds\", \"Carbon in Kilograms\", \"Carbon in Metric Tons\"];\n    let rightcolumnindexer = [\"passengers\", \"legs\", \"distance_value\", \"carbon_lb\", \"carbon_kg\", \"carbon_mt\"]; //let leftcolumn = Object.keys(this.state.emissions)\n\n    let areEmissions = this.state.emissions;\n    let areCoordinates = this.state.pathCoordinates;\n    let legListZero = \"\";\n\n    if (this.state.legs[0]) {\n      let lat = parseInt(this.state.legs[0][\"lat\"]);\n      let lng = parseInt(this.state.legs[0][\"lon\"]);\n      legListZero = {\n        lat: lat,\n        lng: lng\n      };\n    }\n\n    let legListOne = \"\";\n\n    if (this.state.legs[1]) {\n      let lat = parseInt(this.state.legs[1][\"lat\"]);\n      let lng = parseInt(this.state.legs[1][\"lon\"]);\n      legListOne = {\n        lat: lat,\n        lng: lng\n      };\n    }\n\n    let legListTwo = \"\";\n\n    if (this.state.airportsinvolved == 3 || this.state.airportsinvolved == 4 && this.state.legs[2]) {\n      let lat = parseInt(this.state.legs[2][\"lat\"]);\n      let lng = parseInt(this.state.legs[2][\"lon\"]);\n      legListTwo = {\n        lat: lat,\n        lng: lng\n      };\n    } else if (this.state.airportsinvolved == 2) {\n      legListTwo = \"\";\n    }\n\n    let legListThree = \"\";\n\n    if (this.state.airportsinvolved == 4 && this.state.legs[3]) {\n      let lat = parseInt(this.state.legs[3][\"lat\"]);\n      let lng = parseInt(this.state.legs[3][\"lon\"]);\n      legListThree = {\n        lat: lat,\n        lng: lng\n      };\n    } else if (this.state.airportsinvolved != 4) {\n      legListThree = \"\";\n    }\n\n    let cards = \"\";\n\n    if (this.state.emissions) {\n      let distanceStuff = `${this.state.emissions[\"distance_value\"]} ${this.state.emissions[\"distance_unit\"]}`;\n      cards = /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        spacing: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sx: {\n            py: 1,\n            px: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                children: [this.state.emissions[\"carbon_lb\"], \" Pounds\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sx: {\n            py: 1,\n            px: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                children: [this.state.emissions[\"carbon_mt\"], \" Metric Tons\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sx: {\n            py: 1,\n            px: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                children: distanceStuff\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Box, {\n      className: \"App\",\n      sx: {\n        pt: 7,\n        flexGrow: 1,\n        px: 5,\n        height: `100%`,\n        width: `100%`\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        spacing: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          direction: \"column\",\n          justifyContent: \"flex-start\",\n          alignItems: \"flex-start\",\n          alignspacing: 1,\n          xs: 4,\n          sx: {\n            px: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sx: {\n              py: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              sx: {\n                py: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                disablePortal: true,\n                id: \"airport-origin-autofill\",\n                autoHighlight: true,\n                getOptionLabel: option => `${option.name} (${option.code})`,\n                options: airportlist,\n                sx: {\n                  width: \"auto\"\n                },\n                renderOption: (props, option) => /*#__PURE__*/_jsxDEV(Box, {\n                  component: \"li\",\n                  ...props,\n                  children: [option.name, \" \", option.city, \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: option.code\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 539,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 538,\n                  columnNumber: 19\n                }, this),\n                onChange: this.handleOrigin,\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                  label: \"Origin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 544,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              sx: {\n                py: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                disablePortal: true,\n                id: \"airport-destination-autofill\",\n                autoHighlight: true,\n                getOptionLabel: option => `${option.name} (${option.code})`,\n                options: airportlist,\n                sx: {\n                  width: \"auto\"\n                },\n                renderOption: (props, option) => /*#__PURE__*/_jsxDEV(Box, {\n                  component: \"li\",\n                  ...props,\n                  children: [option.name, \" \", option.city, \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: option.code\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 558,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 557,\n                  columnNumber: 19\n                }, this),\n                onChange: this.handleDestination,\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                  label: this.state.airporttwo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 563,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              sx: {\n                py: 1\n              },\n              children: addedlegone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              sx: {\n                py: 1\n              },\n              children: addedfinalleg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"row\",\n              spacing: 1,\n              alignItems: \"center\",\n              justifyContent: \"flex-start\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                sx: {\n                  py: 1,\n                  px: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  sx: {\n                    m: 1,\n                    minWidth: 100\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    id: \"demo-simple-select-label\",\n                    children: \"Passengers\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 580,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    labelId: \"select-passenger-count\",\n                    id: \"select-passenger-count\",\n                    value: this.state.passengers,\n                    label: \"Passengers\",\n                    onChange: this.handlePassengers,\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 1,\n                      children: \"1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 590,\n                      columnNumber: 19\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 2,\n                      children: \"2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 591,\n                      columnNumber: 19\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 3,\n                      children: \"3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 592,\n                      columnNumber: 19\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 4,\n                      children: \"4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 593,\n                      columnNumber: 19\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 5,\n                      children: \"5\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 594,\n                      columnNumber: 19\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 6,\n                      children: \"6\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 595,\n                      columnNumber: 19\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 583,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 579,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                sx: {\n                  py: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  onClick: this.handleAddLeg,\n                  children: [\" \", \"Add Leg\", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 600,\n                  columnNumber: 15\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 599,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                sx: {\n                  py: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  onClick: this.handleRemLeg,\n                  children: \"Remove Leg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 607,\n                  columnNumber: 15\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 606,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              sx: {\n                py: 1,\n                height: `100%`,\n                width: `100%`\n              },\n              children: /*#__PURE__*/_jsxDEV(LoadScript, {\n                style: {\n                  height: `100%`,\n                  width: `100%`\n                },\n                googleMapsApiKey: \"AIzaSyBKHL2R02wDBkDHAWv9b-mnaHmu6MmaWBc\",\n                children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n                  mapContainerStyle: {\n                    height: `100%`,\n                    width: `100%`\n                  },\n                  center: center,\n                  zoom: 2,\n                  children: [areCoordinates && /*#__PURE__*/_jsxDEV(PolylineF, {\n                    path: this.state.pathCoordinates,\n                    options: {\n                      geodesic: true,\n                      strokeColor: \"#FF0000\",\n                      strokeOpacity: 0.8,\n                      strokeWeight: 2,\n                      fillColor: \"#FF0000\",\n                      fillOpacity: 0.5,\n                      clickable: false,\n                      draggable: false,\n                      editable: false,\n                      visible: true,\n                      radius: 30000,\n                      paths: this.state.pathCoordinates\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 621,\n                    columnNumber: 21\n                  }, this), legListZero && /*#__PURE__*/_jsxDEV(MarkerF, {\n                    position: legListZero\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 642,\n                    columnNumber: 21\n                  }, this), legListOne && /*#__PURE__*/_jsxDEV(MarkerF, {\n                    position: legListOne\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 647,\n                    columnNumber: 21\n                  }, this), legListTwo && /*#__PURE__*/_jsxDEV(MarkerF, {\n                    position: legListTwo\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 652,\n                    columnNumber: 21\n                  }, this), legListThree && /*#__PURE__*/_jsxDEV(MarkerF, {\n                    position: legListThree\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 657,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 614,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 613,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          direction: \"column\",\n          justifyContent: \"flex-start\",\n          alignItems: \"flex-start\",\n          alignspacing: 1,\n          xs: 4,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sx: {\n              py: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"center\",\n              variant: \"h4\",\n              children: \"Flight Emissions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 677,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 676,\n            columnNumber: 13\n          }, this), cards]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Flight; // googleMapsApiKey='AIzaSyBKHL2R02wDBkDHAWv9b-mnaHmu6MmaWBc'","map":{"version":3,"names":["React","Component","TextField","Autocomplete","Box","Button","CardContent","airportlist","InputLabel","MenuItem","FormControl","Select","SelectChangeEvent","calculateFlightEmissions","Table","TableRow","TableCell","TableContainer","TableHead","TableBody","Paper","Typography","Grid","Card","GoogleMap","LoadScript","PolylineF","MarkerF","Marker","center","lat","lng","Flight","constructor","props","componentDidMount","createData","column","otherColumn","handlePassengers","event","setState","passengers","target","value","console","log","state","demobool","legarray","coordinateArray","loopervar","airportsinvolved","key2","legs","push","parseInt","coordinatesObject","then","emissions","pathCoordinates","handleOrigin","values","templegs","handleDestination","handleAddLeg","addleg","airporttwo","airportthree","alert","handleRemLeg","remleg","handleAddedLeg","handleFinalLeg","selectedOrigin","selectedDestination","selectedAddedLeg","selectedFinalLeg","leftcolumn","isFLightNumber","bind","render","addedlegone","option","name","code","width","city","params","addedfinalleg","results","JSON","stringify","rightcolumnindexer","areEmissions","areCoordinates","legListZero","legListOne","legListTwo","legListThree","cards","distanceStuff","py","px","pt","flexGrow","height","m","minWidth","geodesic","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","clickable","draggable","editable","visible","radius","paths"],"sources":["/Users/abhijayrana/emissioncalc/src/components/Flight.jsx"],"sourcesContent":["import React from \"react\";\nimport { Component } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport Box from \"@mui/material/Box\";\nimport { Button, CardContent } from \"@mui/material\";\nimport { airportlist } from \"./AirportData.jsx\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\nimport { calculateFlightEmissions } from \"./FlightEmission.jsx\";\nimport Table from \"@mui/material/Table\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableBody from \"@mui/material/TableBody\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport Card from \"@mui/material/Card\"\nimport { GoogleMap, LoadScript, PolylineF, MarkerF, Marker } from '@react-google-maps/api'\n\n\n//import useStyles from \"./styles.jsx\";\n\n\nconst center = {\n  lat: 20,\n  lng: -20,\n}\n\n\nclass Flight extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      legs: {\n        0: \"\",\n        1: \"\",\n        2: \"\",\n        3: \"\",\n      },\n      selectedOrigin: \"\",\n      selectedDestination: \"\",\n      selectedAddedLeg: \"\",\n      selectedFinalLeg: \"\",\n      airportsinvolved: 2,\n      passengers: 2,\n      emissions: \"\",\n      leftcolumn: [\n        \"Legs Involved\",\n        \"Airports\",\n        \"Distance\",\n        \"Units\",\n        \"Date of Estimation\",\n        \"Carbon in Grams\",\n        \"Carbon in Pounds\",\n        \"Carbon in Kilograms\",\n        \"Carbon in Metric Tons\",\n      ],\n      airporttwo: \"Destination\",\n      airportthree: \"Destination\",\n      pathCoordinates: \"\",\n      isFLightNumber: false,\n    };\n    this.handleOrigin = this.handleOrigin.bind(this);\n    this.handleDestination = this.handleDestination.bind(this);\n  }\n\n  componentDidMount = async () => {};\n\n  createData = (column, otherColumn) => {\n    return { column, otherColumn };\n  };\n\n  handlePassengers = (event) => {\n    this.setState({ passengers: event.target.value }, () => {\n      console.log(this.state.passengers);\n\n      let demobool = false;\n      let legarray = [];\n      let coordinateArray = [];\n\n      let loopervar = this.state.airportsinvolved;\n\n      for (let key2 = 0; key2 < loopervar; key2++) {\n        if (this.state.legs[`${key2}`] && this.state.legs[`${key2}`] != null) {\n          console.log(\"a\");\n          demobool = true;\n          legarray.push(this.state.legs[`${key2}`][\"code\"]);\n          let lat = parseInt(this.state.legs[`${key2}`]['lat'])\n          let lng = parseInt(this.state.legs[`${key2}`]['lon'])\n          let coordinatesObject = {lat: lat, lng: lng}\n          coordinateArray.push(coordinatesObject)\n\n        } else {\n          demobool = false;\n        }\n      }\n      if (demobool == true) {\n        calculateFlightEmissions(legarray, this.state.passengers).then(\n          (emissions) => {\n            this.setState({ emissions: emissions, pathCoordinates: coordinateArray }, () => {\n              console.log(\"worked gg\");\n              console.log(this.state.emissions);\n              console.log(\"coordiantes haha\")\n              console.log(this.state.pathCoordinates)\n            });\n          }\n        );\n        \n      }\n    });\n  };\n\n  handleOrigin = (event, values) => {\n    if (values != null) {\n      let templegs = this.state.legs;\n      templegs[\"0\"] = values;\n\n      this.setState({ legs: templegs }, () => {\n        console.log(this.state.legs);\n      });\n\n      let demobool = false;\n      let legarray = [];\n      let loopervar = this.state.airportsinvolved;\n      let coordinateArray = [];\n\n\n      for (let key2 = 0; key2 < loopervar; key2++) {\n        if (this.state.legs[`${key2}`] && this.state.legs[`${key2}`] != null) {\n          console.log(\"a\");\n          demobool = true;\n          legarray.push(this.state.legs[`${key2}`][\"code\"]);\n          let lat = parseInt(this.state.legs[`${key2}`]['lat'])\n          let lng = parseInt(this.state.legs[`${key2}`]['lon'])\n          let coordinatesObject = {lat: lat, lng: lng}\n          coordinateArray.push(coordinatesObject)\n        } else {\n          demobool = false;\n        }\n      }\n      if (demobool == true) {\n        calculateFlightEmissions(legarray, this.state.passengers).then(\n          (emissions) => {\n            this.setState({ emissions: emissions, pathCoordinates: coordinateArray  }, () => {\n              console.log(\"worked gg\");\n              console.log(this.state.emissions);\n              console.log(\"coordiantes haha\")\n              console.log(this.state.pathCoordinates)\n            });\n          }\n        );\n      }\n    }\n  };\n\n  handleDestination = (event, values) => {\n    if (values != null) {\n      let templegs = this.state.legs;\n      templegs[\"1\"] = values;\n\n      this.setState({ legs: templegs }, () => {\n        console.log(this.state.legs);\n      });\n\n      let demobool = false;\n      let legarray = [];\n      let loopervar = this.state.airportsinvolved;\n      let coordinateArray = [];\n\n\n      for (let key2 = 0; key2 < loopervar; key2++) {\n        if (\n          this.state.legs[`${key2}`] != \"\" &&\n          this.state.legs[`${key2}`] != null\n        ) {\n          demobool = true;\n          legarray.push(this.state.legs[`${key2}`][\"code\"]);\n          let lat = parseInt(this.state.legs[`${key2}`]['lat'])\n          let lng = parseInt(this.state.legs[`${key2}`]['lon'])\n          let coordinatesObject = {lat: lat, lng: lng}          \n          coordinateArray.push(coordinatesObject)\n        } else {\n          demobool = false;\n        }\n      }\n      if (demobool == true) {\n        calculateFlightEmissions(legarray, this.state.passengers).then(\n          (emissions) => {\n            this.setState({ emissions: emissions, pathCoordinates: coordinateArray  }, () => {\n              console.log(\"worked gg\");\n              console.log(this.state.emissions);\n              console.log(\"coordiantes haha\")\n              console.log(this.state.pathCoordinates)\n            });\n          }\n        );\n      }\n    }\n  };\n\n  handleAddLeg = () => {\n    if (this.state.airportsinvolved < 4) {\n      let addleg = this.state.airportsinvolved + 1;\n      this.setState({ airportsinvolved: addleg }, () => {\n        console.log(this.state.airportsinvolved);\n        if (this.state.airportsinvolved == 3) {\n          this.setState({ airporttwo: \"Leg One\" }, () => {\n            console.log(this.state.airporttwo);\n          });\n        } else if (this.state.airportsinvolved == 4) {\n          this.setState({ airportthree: \"Leg Two\" }, () => {\n            console.log(this.state.airportthree);\n          });\n        }\n      });\n    } else {\n      alert(\"you really that broke you needa fly 5 connections bruh\");\n    }\n  };\n\n  handleRemLeg = () => {\n    if (this.state.airportsinvolved > 2) {\n      let remleg = this.state.airportsinvolved - 1;\n      this.setState({ airportsinvolved: remleg }, () => {\n        if (this.state.airportsinvolved == 3) {\n          this.setState({ airportthree: \"Destination\" }, () => {\n            console.log(this.state.airportthree);\n          });\n        } else if (this.state.airportsinvolved == 2) {\n          this.setState({ airporttwo: \"Destination\" }, () => {\n            console.log(this.state.airporttwo);\n          });\n        }\n\n        console.log(this.state.airportsinvolved);\n        let demobool = false;\n        let legarray = [];\n        let loopervar = this.state.airportsinvolved;\n        let coordinateArray = [];\n\n\n        for (let key2 = 0; key2 < loopervar; key2++) {\n          if (\n            this.state.legs[`${key2}`] != \"\" &&\n            this.state.legs[`${key2}`] != null\n          ) {\n            demobool = true;\n            legarray.push(this.state.legs[`${key2}`][\"code\"]);\n            let lat = parseInt(this.state.legs[`${key2}`]['lat'])\n            let lng = parseInt(this.state.legs[`${key2}`]['lon'])\n            let coordinatesObject = {lat: lat, lng: lng}            \n            coordinateArray.push(coordinatesObject)\n          } else {\n            demobool = false;\n          }\n        }\n        if (demobool == true) {\n          calculateFlightEmissions(legarray, this.state.passengers).then(\n            (emissions) => {\n              this.setState({ emissions: emissions, pathCoordinates: coordinateArray  }, () => {\n                console.log(\"worked gg\");\n                console.log(this.state.emissions);\n                console.log(\"coordiantes haha\")\n                console.log(this.state.pathCoordinates)\n              });\n            }\n          );\n        }\n      });\n    } else {\n      alert(\"you needa fly to another airport 🤦‍♂️\");\n    }\n  };\n\n  handleAddedLeg = (event, values) => {\n    if (values != null) {\n      let templegs = this.state.legs;\n      templegs[\"2\"] = values;\n\n      this.setState({ legs: templegs }, () => {\n        console.log(this.state.legs);\n      });\n\n      let demobool = false;\n      let legarray = [];\n      let loopervar = this.state.airportsinvolved;\n      let coordinateArray = [];\n\n\n      for (let key2 = 0; key2 < loopervar; key2++) {\n        if (\n          this.state.legs[`${key2}`] != \"\" &&\n          this.state.legs[`${key2}`] != null\n        ) {\n          demobool = true;\n          legarray.push(this.state.legs[`${key2}`][\"code\"]);\n          let lat = parseInt(this.state.legs[`${key2}`]['lat'])\n          let lng = parseInt(this.state.legs[`${key2}`]['lon'])\n          let coordinatesObject = {lat: lat, lng: lng}\n          coordinateArray.push(coordinatesObject)\n        } else {\n          demobool = false;\n        }\n      }\n      if (demobool == true) {\n        calculateFlightEmissions(legarray, this.state.passengers).then(\n          (emissions) => {\n            this.setState({ emissions: emissions, pathCoordinates: coordinateArray  }, () => {\n              console.log(\"worked gg\");\n              console.log(this.state.emissions);\n            });\n          }\n        );\n      }\n    }\n  };\n\n  handleFinalLeg = (event, values) => {\n    if (values != null) {\n      let templegs = this.state.legs; \n      templegs[\"3\"] = values;\n\n      this.setState({ legs: templegs }, () => {\n        console.log(this.state.legs);\n      });\n\n      let demobool = false;\n      let legarray = [];\n      let loopervar = this.state.airportsinvolved;\n      let coordinateArray = [];\n\n\n      for (let key2 = 0; key2 < loopervar; key2++) {\n        if (\n          this.state.legs[`${key2}`] != \"\" &&\n          this.state.legs[`${key2}`] != null\n        ) {\n          demobool = true;\n          legarray.push(this.state.legs[`${key2}`][\"code\"]);\n          let lat = parseInt(this.state.legs[`${key2}`]['lat'])\n          let lng = parseInt(this.state.legs[`${key2}`]['lon'])\n          let coordinatesObject = {lat: lat, lng: lng}\n          coordinateArray.push(coordinatesObject)\n        } else {\n          demobool = false;\n        }\n      }\n      if (demobool == true) {\n        calculateFlightEmissions(legarray, this.state.passengers).then(\n          (emissions) => {\n            this.setState({ emissions: emissions, pathCoordinates: coordinateArray  }, () => {\n              console.log(\"worked gg\");\n              console.log(this.state.emissions);\n            });\n          }\n        );\n      }\n    }\n  };\n\n\n\n  render() {\n    let addedlegone = \"\";\n    if (this.state.airportsinvolved >= 3) {\n      addedlegone = (\n        <Autocomplete\n          disablePortal\n          id=\"airport-leg3-autofill\"\n          autoHighlight\n          getOptionLabel={(option) => `${option.name} (${option.code})`}\n          options={airportlist}\n          sx={{ width: \"auto\" }}\n          renderOption={(props, option) => (\n            <Box component=\"li\" {...props}>\n              {option.name} {option.city} <b>{option.code}</b>\n            </Box>\n          )}\n          onChange={this.handleAddedLeg}\n          renderInput={(params) => (\n            <TextField {...params} label={this.state.airportthree} />\n          )}\n        />\n      );\n    }\n\n    let addedfinalleg = \"\";\n    if (this.state.airportsinvolved >= 4) {\n      addedfinalleg = (\n        <Autocomplete\n          disablePortal\n          id=\"airport-leg3-autofill\"\n          autoHighlight\n          getOptionLabel={(option) => `${option.name} (${option.code})`}\n          options={airportlist}\n          sx={{ width: \"auto\" }}\n          renderOption={(props, option) => (\n            <Box component=\"li\" {...props}>\n              {option.name} {option.city} <b>{option.code}</b>\n            </Box>\n          )}\n          onChange={this.handleFinalLeg}\n          renderInput={(params) => (\n            <TextField {...params} label=\"Destination\" />\n          )}\n        />\n      );\n    }\n\n    let results = \"\";\n    if (this.state.emissions) {\n      results = JSON.stringify(this.state.emissions);\n    }\n\n    let leftcolumn = [\n      \"Passengers\",\n      \"Airports\",\n      \"Distance\",\n      \"Carbon in Pounds\",\n      \"Carbon in Kilograms\",\n      \"Carbon in Metric Tons\",\n    ];\n    let rightcolumnindexer = [\n      \"passengers\",\n      \"legs\",\n      \"distance_value\",\n      \"carbon_lb\",\n      \"carbon_kg\",\n      \"carbon_mt\",\n    ];\n    //let leftcolumn = Object.keys(this.state.emissions)\n\n   \n    let areEmissions = this.state.emissions;\n    let areCoordinates = this.state.pathCoordinates\n\n    let legListZero = \"\"\n    if(this.state.legs[0]){\n      let lat = parseInt(this.state.legs[0][\"lat\"])\n      let lng = parseInt(this.state.legs[0][\"lon\"])\n      legListZero = {lat: lat, lng: lng}\n    }\n    let legListOne = \"\"\n    if(this.state.legs[1]){\n      let lat = parseInt(this.state.legs[1][\"lat\"])\n      let lng = parseInt(this.state.legs[1][\"lon\"])\n      legListOne = {lat: lat, lng: lng}\n    }\n\n    let legListTwo = \"\"\n    if(this.state.airportsinvolved == 3 || this.state.airportsinvolved == 4 && this.state.legs[2]){\n      let lat = parseInt(this.state.legs[2][\"lat\"])\n      let lng = parseInt(this.state.legs[2][\"lon\"])\n      legListTwo = {lat: lat, lng: lng}\n    } else if (this.state.airportsinvolved ==2) {\n      legListTwo = \"\"\n    }\n\n    let legListThree = \"\"\n    if(this.state.airportsinvolved==4 && this.state.legs[3]){\n      let lat = parseInt(this.state.legs[3][\"lat\"])\n      let lng = parseInt(this.state.legs[3][\"lon\"])\n      legListThree = {lat: lat, lng: lng}\n    } else if (this.state.airportsinvolved != 4){\n      legListThree = \"\"\n    }\n\n    let cards = \"\"\n    if(this.state.emissions) {\n      let distanceStuff = `${this.state.emissions[\"distance_value\"]} ${this.state.emissions[\"distance_unit\"]}`\n      cards = (\n        <Grid container direction=\"row\" spacing={1} alignItems=\"center\" justifyContent=\"center\">\n          <Grid item sx={{py: 1, px: 1}}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h5\">\n                    {this.state.emissions[\"carbon_lb\"]} Pounds\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item sx={{py: 1, px: 1}}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h5\">\n                    {this.state.emissions[\"carbon_mt\"]} Metric Tons\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item sx={{py: 1, px: 1}}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h5\">\n                    {distanceStuff}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n \n\n      )\n    }\n\n\n    return (\n      <Box className=\"App\" sx={{ pt: 7, flexGrow: 1, px: 5, height: `100%`, width: `100%` }}>\n        <Grid container direction=\"row\" spacing={1}>\n          <Grid\n            item\n            direction=\"column\"\n            justifyContent=\"flex-start\"\n            alignItems=\"flex-start\"\n            alignspacing={1}\n            xs={4}\n            sx={{ px: 1 }}\n          >\n            <Grid item sx={{py: 1}}>\n  \n\n            </Grid>\n            <Grid item>\n            <Grid item sx={{ py: 1 }}>\n              <Autocomplete\n                disablePortal\n                id=\"airport-origin-autofill\"\n                autoHighlight\n                getOptionLabel={(option) => `${option.name} (${option.code})`}\n                options={airportlist}\n                sx={{ width: \"auto\" }}\n                renderOption={(props, option) => (\n                  <Box component=\"li\" {...props}>\n                    {option.name} {option.city} <b>{option.code}</b>\n                  </Box>\n                )}\n                onChange={this.handleOrigin}\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Origin\" />\n                )}\n              />\n            </Grid>\n            <Grid item sx={{ py: 1 }}>\n              <Autocomplete\n                disablePortal\n                id=\"airport-destination-autofill\"\n                autoHighlight\n                getOptionLabel={(option) => `${option.name} (${option.code})`}\n                options={airportlist}\n                sx={{ width: \"auto\" }}\n                renderOption={(props, option) => (\n                  <Box component=\"li\" {...props}>\n                    {option.name} {option.city} <b>{option.code}</b>\n                  </Box>\n                )}\n                onChange={this.handleDestination}\n                renderInput={(params) => (\n                  <TextField {...params} label={this.state.airporttwo} />\n                )}\n              />\n            </Grid>\n\n            <Grid item sx={{ py: 1 }}>\n              {addedlegone}\n            </Grid>\n\n            <Grid item sx={{ py: 1 }}>\n              {addedfinalleg}\n            </Grid>\n\n            <Grid container direction=\"row\" spacing={1} alignItems=\"center\" justifyContent=\"flex-start\">\n\n            <Grid item sx={{ py: 1, px: 2 }}>\n              <FormControl fullWidth sx={{ m: 1, minWidth: 100 }}>\n                <InputLabel id=\"demo-simple-select-label\">\n                  Passengers\n                </InputLabel>\n                <Select\n                  labelId=\"select-passenger-count\"\n                  id=\"select-passenger-count\"\n                  value={this.state.passengers}\n                  label=\"Passengers\"\n                  onChange={this.handlePassengers}\n                >\n                  <MenuItem value={1}>1</MenuItem>\n                  <MenuItem value={2}>2</MenuItem>\n                  <MenuItem value={3}>3</MenuItem>\n                  <MenuItem value={4}>4</MenuItem>\n                  <MenuItem value={5}>5</MenuItem>\n                  <MenuItem value={6}>6</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item sx={{ py: 1 }}>\n              <Button color=\"primary\" onClick={this.handleAddLeg}>\n                {\" \"}\n                Add Leg{\" \"}\n              </Button>{\" \"}\n            </Grid>\n\n            <Grid item sx={{ py: 1 }}>\n              <Button color=\"primary\" onClick={this.handleRemLeg}>\n                Remove Leg\n              </Button>{\" \"}\n            </Grid>\n          </Grid>\n          <Grid item sx={{py: 1, height: `100%`, width: `100%`}}>\n            <LoadScript style={{height: `100%`, width: `100%`}}  googleMapsApiKey='AIzaSyBKHL2R02wDBkDHAWv9b-mnaHmu6MmaWBc'>\n                <GoogleMap \n                  mapContainerStyle={{height: `100%`, width: `100%`}}\n                  center={center}\n                  zoom={2}  \n                >\n                  {areCoordinates && (\n\n                    <PolylineF\n                      path={this.state.pathCoordinates}\n                      options={{\n                        geodesic: true,\n                        strokeColor: \"#FF0000\",\n                        strokeOpacity: 0.8,\n                        strokeWeight: 2,\n                        fillColor: \"#FF0000\",\n                        fillOpacity: 0.5,\n                        clickable: false,\n                        draggable: false,\n                        editable: false,\n                        visible: true,\n                        radius: 30000,\n                        paths: this.state.pathCoordinates\n                      }\n                      }\n                    />\n                  )}\n\n                  {legListZero && (\n                    <MarkerF\n                       position={legListZero}\n                    />\n                  )}\n                  {legListOne && (\n                    <MarkerF\n                       position={legListOne}\n                    />\n                  )}                  \n                  {legListTwo && (\n                    <MarkerF\n                       position={legListTwo}\n                    />\n                  )}                  \n                  {legListThree && (\n                    <MarkerF\n                       position={legListThree}\n                    />\n                  )}\n\n                </GoogleMap>\n           </LoadScript>\n            </Grid>\n          </Grid>\n          </Grid>\n\n          <Grid\n            item\n            direction=\"column\"\n            justifyContent=\"flex-start\"\n            alignItems=\"flex-start\"\n            alignspacing={1}\n            xs={4}\n          >\n            <Grid item sx={{ py: 1 }}>\n              <Typography align=\"center\" variant=\"h4\">\n                Flight Emissions\n              </Typography>\n            </Grid>\n            \n            {cards}\n\n\n            \n\n\n\n          </Grid>\n        </Grid>\n      </Box>\n    );\n  }\n}\n\nexport default Flight;\n\n// googleMapsApiKey='AIzaSyBKHL2R02wDBkDHAWv9b-mnaHmu6MmaWBc'"],"mappings":"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"},"metadata":{},"sourceType":"module"}