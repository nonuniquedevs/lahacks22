{"ast":null,"code":"var _jsxFileName = \"/Users/abhijayrana/emissioncalc/src/components/Vehicle.jsx\";\nimport React from \"react\";\nimport { Component } from \"react\";\nimport { DistanceMatrixService, LoadScript, Autocomplete, DirectionsService, DirectionsRenderer, GoogleMap } from \"@react-google-maps/api\";\nimport { Button } from \"@material-ui/core\";\nimport Box from \"@mui/material/Box\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Vehicle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      console.log(\"component mounted\"); //calls car makes list api\n      //aadi's token - carbon interface\n\n      const options = {\n        method: \"GET\",\n        headers: {\n          Authorization: \"Bearer Zjxitbl7VzuoMXlEnoMNw\t\",\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      fetch(\"https://www.carboninterface.com/api/v1/vehicle_makes\", options).then(response => response.json()).then(responseText => {\n        let temparray = [];\n\n        for (var key2 in responseText) {\n          temparray.push(responseText[key2].data);\n        }\n\n        this.setState({\n          makes: temparray\n        }, function () {});\n      });\n    };\n\n    this.handleCarMake = event => {\n      event.preventDefault(); //sets this.state.selectedmake = the car make\n\n      this.setState({\n        selectedmake: event.target.value\n      }); //sorts through makes list and matches name to id\n      //then fetches models from selected make\n\n      for (var key2 in this.state.makes) {\n        if (this.state.makes[key2].id == event.target.value) {\n          this.setState({\n            makename: this.state.makes[key2].attributes.name\n          }, function () {\n            //console.log(this.state.makename);\n            //console.log(this.state.selectedmake);\n            const options = {\n              method: \"GET\",\n              headers: {\n                Authorization: \"Bearer Zjxitbl7VzuoMXlEnoMNw\",\n                \"Content-Type\": \"application/json\"\n              }\n            };\n            fetch(`https://www.carboninterface.com/api/v1/vehicle_makes/${this.state.selectedmake}/vehicle_models`, options).then(response => response.json()).then(responseText => {\n              this.setState({\n                models: responseText\n              }, function () {\n                if (this.state.yearom != \"a\") {\n                  let filteredmodels = [];\n\n                  for (var key2 in this.state.models) {\n                    if (this.state.models[key2].data.attributes.year == this.state.yearom) {\n                      filteredmodels.push(this.state.models[key2].data);\n                    } else {}\n                  }\n\n                  this.setState({\n                    modelsfiltered: filteredmodels\n                  }, function () {\n                    let removeduplicates = this.state.modelsfiltered;\n\n                    for (var key2 in this.state.modelsfiltered) {\n                      for (var key3 in removeduplicates) {\n                        if (this.state.modelsfiltered[key2].attributes.name == removeduplicates[key3].attributes.name && this.state.modelsfiltered[key2] != removeduplicates[key3]) {\n                          removeduplicates.splice(key3, 1);\n                        }\n                      }\n                    } //console.log(\"diltered\");\n                    //console.log(removeduplicates);\n\n\n                    this.setState({\n                      modelsfiltered: removeduplicates\n                    }, function () {//console.log(\"mf\");\n                      //console.log(this.state.modelsfiltered);\n                    });\n                  });\n                }\n              });\n            });\n          });\n        }\n      }\n    };\n\n    this.handleyear = event => {\n      //console.log(\"bruh\");\n      event.preventDefault();\n      this.setState({\n        yearom: event.target.value\n      }, function () {\n        // console.log(this.state.yearom);\n        // console.log(this.state.models);\n        let filteredmodels = [];\n\n        for (var key2 in this.state.models) {\n          if (this.state.models[key2].data.attributes.year == event.target.value) {\n            filteredmodels.push(this.state.models[key2].data);\n          } else {}\n        }\n\n        this.setState({\n          modelsfiltered: filteredmodels\n        }, function () {\n          //   console.log(\"mf\");\n          //   console.log(this.state.modelsfiltered);\n          let removeduplicates = this.state.modelsfiltered;\n\n          for (var key2 in this.state.modelsfiltered) {\n            for (var key3 in removeduplicates) {\n              if (this.state.modelsfiltered[key2].attributes.name == removeduplicates[key3].attributes.name && this.state.modelsfiltered[key2] != removeduplicates[key3]) {\n                removeduplicates.splice(key3, 1);\n              }\n            }\n          } //   console.log(\"diltered\");\n          //   console.log(removeduplicates);\n\n\n          this.setState({\n            modelsfiltered: removeduplicates\n          }, function () {//  console.log(\"mf\");\n            //  console.log(this.state.modelsfiltered);\n          });\n        });\n      });\n    };\n\n    this.handleCarModel = event => {\n      //console.log(\"model handled\");\n      let vehicleid = event.target.value; // console.log(vehicleid);\n\n      for (var key2 in this.state.modelsfiltered) {\n        // console.log(\"hi\");\n        if (this.state.modelsfiltered[key2].id == event.target.value) {\n          this.setState({\n            selectedmodel: this.state.modelsfiltered[key2].id\n          }, function () {//console.log(this.state.selectedmodel);\n          });\n        }\n      }\n\n      if (this.state.distance) {\n        let distance = this.state.distance;\n        const options = {\n          method: \"POST\",\n          headers: {\n            Authorization: \"Bearer Zjxitbl7VzuoMXlEnoMNw\",\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            type: \"vehicle\",\n            distance_unit: \"km\",\n            distance_value: distance,\n            vehicle_model_id: vehicleid\n          })\n        };\n        fetch(\"https://www.carboninterface.com/api/v1/estimates\", options).then(response => response.json()).then(responseText => {\n          this.setState({\n            emissions: responseText.data.attributes\n          }, function () {\n            console.log(\"Response:\");\n            console.log(this.state.emissions); // let leftkeys = Object.keys(this.state.emissions);\n            // console.log(leftkeys);\n            // this.setState({ leftkeys: leftkeys });\n          });\n        });\n      }\n    };\n\n    this.handleInterval = event => {\n      this.setState({\n        selectedinterval: event.target.value\n      });\n      console.log(this.state.selectedinterval);\n    };\n\n    this.state = {\n      makes: \"\",\n      models: \"\",\n      distance: \"\",\n      emissions: \"\",\n      leftkeys: \"\",\n      selectedmake: \"1\",\n      selectedmodel: \"a\",\n      makename: \"\",\n      yearom: \"a\",\n      selectedinterval: \"a\",\n      yeararray: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020],\n      intervalarray: [\"Daily\", \"Weekly\", \"Monthly\", \"Yearly\"],\n      modelsfiltered: \"\",\n      distanceApi: \"\",\n      autofillApi: \"\",\n      origin: \"\",\n      destination: \"\",\n      route_dist: \"\",\n      route_results: \"\",\n      route_result_pairs: \"\"\n    };\n  }\n\n  render() {\n    let makeinput = \"\";\n\n    if (this.state.makes) {\n      makeinput = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {},\n          size: \"small\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            value: this.state.selectedmake,\n            onChange: this.handleCarMake,\n            size: \"small\",\n            variant: \"outlined\",\n            sx: {},\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"1\",\n              disabled: true,\n              children: \"Car make\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this), this.state.makes.map(make => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: make.id,\n              children: [\" \", make.attributes.name, \" \"]\n            }, make.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this);\n    }\n\n    let yearinput = \"\";\n\n    if (this.state.selectedmake && this.state.selectedmake != \"1\") {\n      yearinput = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {},\n          size: \"small\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            value: this.state.yearom,\n            onChange: this.handleyear,\n            size: \"small\",\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"a\",\n              disabled: true,\n              children: \"Manufacturing Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this), this.state.yeararray.map((year, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: year,\n              children: year\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this);\n    }\n\n    let modelinput = \"\";\n\n    if (this.state.modelsfiltered && this.state.yearom != \"a\") {\n      modelinput = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {},\n          size: \"small\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            value: this.state.selectedmodel,\n            onChange: this.handleCarModel,\n            size: \"small\",\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"a\",\n              disabled: true,\n              children: \"Car Model\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this), this.state.modelsfiltered.map(model => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: model.id,\n              children: [\" \", model.attributes.name, \" \"]\n            }, model.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this);\n    }\n\n    let intervalinput = \"\";\n\n    if (this.state.selectedmodel !== \"a\") {\n      intervalinput = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {},\n          size: \"small\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            value: this.state.selectedinterval,\n            onChange: this.handleInterval,\n            size: \"small\",\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"a\",\n              disabled: true,\n              children: \"Interval\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this), this.state.intervalarray.map((interval, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: interval,\n              children: interval\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      style: {\n        height: \"100vh\",\n        width: \"100vw\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Vehicle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"grid\",\n          columnGap: 1,\n          rowGap: 1,\n          gridTemplateColumns: \"repeat(2, 1fr)\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"list\", {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: \"grid\",\n                gap: 1,\n                gridTemplateColumns: \"repeat(1, 4fr)\"\n              },\n              style: {},\n              children: [/*#__PURE__*/_jsxDEV(\"list\", {\n                children: makeinput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"list\", {\n                children: yearinput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"list\", {\n                children: modelinput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"list\", {\n                children: intervalinput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"list\", {\n          children: /*#__PURE__*/_jsxDEV(LoadScript, {\n            googleMapsApiKey: \"AIzaSyBKHL2R02wDBkDHAWv9b-mnaHmu6MmaWBc\",\n            libraries: [\"places\"],\n            children: this.state.selectedinterval !== \"a\" && /*#__PURE__*/_jsxDEV(AutocompleteApiComponent, {\n              vehicle_model: this.state.selectedmodel,\n              interval: this.state.selectedinterval\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this);\n  }\n\n} // fetches distance for route\n\n\nclass DistApiComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      origin: this.props.input_origin,\n      destination: this.props.input_destination,\n      distance: null,\n      interval: this.props.interval,\n      vehicleId: this.props.vehicleId\n    };\n    this.distanceCallback = this.distanceCallback.bind(this);\n  } // updates state when api returns distance for route\n\n\n  distanceCallback(response) {\n    if (response !== null && this.state.distance === null) {\n      var distanceText = response.rows[0].elements[0].distance.text;\n      this.setState({\n        distance: distanceText.replace(\",\", \"\").replace(\"km\", \"\")\n      });\n    }\n  }\n\n  render() {\n    console.log(\"DistApiComp vehicleId:\", this.state.vehicleId);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(DistanceMatrixService, {\n        options: {\n          destinations: [{\n            placeId: this.state.origin\n          }],\n          origins: [{\n            placeId: this.state.destination\n          }],\n          travelMode: \"DRIVING\"\n        },\n        callback: this.distanceCallback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, this), this.state.vehicleId !== \"a\" && this.state.distance !== null && /*#__PURE__*/_jsxDEV(ResultsComponent, {\n        vehicleId: this.state.vehicleId,\n        routeDistance: this.state.distance,\n        interval: this.state.interval\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 7\n    }, this);\n  }\n\n} // handles map display and travel input\n\n\nclass AutocompleteApiComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      origin: null,\n      destination: null,\n      routeResponse: null,\n      DistApi: null,\n      interval: this.props.interval,\n      vehicle_model: this.props.vehicle_model\n    };\n    this.origin_autocomplete = null;\n    this.destination_autocomplete = null;\n    this.origin_onLoad = this.origin_onLoad.bind(this);\n    this.origin_onPlaceChanged = this.origin_onPlaceChanged.bind(this);\n    this.destination_onLoad = this.destination_onLoad.bind(this);\n    this.destination_onPlaceChanged = this.destination_onPlaceChanged.bind(this);\n    this.directionsCallback = this.directionsCallback.bind(this);\n  } // called on origin textbox load\n\n\n  origin_onLoad(origin_autocomplete) {\n    console.log(\"origin autocomplete: \", origin_autocomplete);\n    this.origin_autocomplete = origin_autocomplete;\n  } // called on destination textbox load\n\n\n  destination_onLoad(destination_autocomplete) {\n    console.log(\"destination autocomplete: \", destination_autocomplete);\n    this.destination_autocomplete = destination_autocomplete;\n  } // updates state when origin input is given\n\n\n  origin_onPlaceChanged() {\n    if (this.origin_autocomplete != null) {\n      this.state.origin = this.origin_autocomplete.getPlace().place_id;\n      this.setState({\n        origin: this.origin_autocomplete.getPlace().place_id\n      });\n      console.log(this.state.origin);\n    } else {\n      console.log(\"Autocomplete is not loaded yet!\");\n    }\n  } // updates state when destination input is given\n\n\n  destination_onPlaceChanged() {\n    if (this.destination_autocomplete != null) {\n      this.state.destination = this.destination_autocomplete.getPlace().place_id;\n      this.setState({\n        destination: this.destination_autocomplete.getPlace().place_id\n      });\n      console.log(this.state.destination);\n      console.log(\"AutocompleteApiComp after destination vehicleId:\", this.state.vehicle_model);\n      this.setState({\n        DistApi: [/*#__PURE__*/_jsxDEV(DistApiComponent, {\n          input_origin: this.state.origin,\n          input_destination: this.state.destination,\n          vehicleId: this.state.vehicle_model,\n          interval: this.state.interval\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 11\n        }, this)]\n      });\n    } else {\n      console.log(\"Autocomplete is not loaded yet!\");\n    }\n  } // updates state when directions retrieved for showing route\n\n\n  directionsCallback(response) {\n    if (response !== null && this.state.routeResponse === null) {\n      if (response.status === \"OK\") {\n        this.setState({\n          routeResponse: response\n        });\n      } else {\n        console.log(\"error: \", response);\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"grid\",\n          columnGap: 1,\n          rowGap: 1,\n          gridTemplateColumns: \"repeat(2, 1fr)\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"list\", {\n          children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n            id: \"searchbox-example\",\n            mapContainerStyle: {\n              height: \"800px\",\n              width: \"400px\"\n            },\n            zoom: 2.5,\n            center: {\n              lat: 38.685,\n              lng: -115.234\n            },\n            children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n              onLoad: this.origin_onLoad,\n              onPlaceChanged: this.origin_onPlaceChanged,\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Enter your origin \",\n                style: {\n                  boxSizing: `border-box`,\n                  border: `1px solid transparent`,\n                  width: `240px`,\n                  height: `32px`,\n                  padding: `0 12px`,\n                  borderRadius: `3px`,\n                  boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n                  fontSize: `14px`,\n                  outline: `none`,\n                  textOverflow: `ellipses`,\n                  position: \"absolute\",\n                  left: \"50%\",\n                  top: \"2%\",\n                  marginLeft: \"-120px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n              onLoad: this.destination_onLoad,\n              onPlaceChanged: this.destination_onPlaceChanged,\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Enter your destination \",\n                style: {\n                  boxSizing: `border-box`,\n                  border: `1px solid transparent`,\n                  width: `240px`,\n                  height: `32px`,\n                  padding: `0 12px`,\n                  borderRadius: `3px`,\n                  boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n                  fontSize: `14px`,\n                  outline: `none`,\n                  textOverflow: `ellipses`,\n                  position: \"absolute\",\n                  left: \"50%\",\n                  top: \"12%\",\n                  marginLeft: \"-120px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 595,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 15\n            }, this), this.state.destination !== null && this.state.origin !== null && /*#__PURE__*/_jsxDEV(DirectionsService, {\n              options: {\n                destination: {\n                  placeId: this.state.destination\n                },\n                origin: {\n                  placeId: this.state.origin\n                },\n                travelMode: \"DRIVING\"\n              },\n              callback: this.directionsCallback,\n              onLoad: directionsService => {\n                console.log(\"DirectionsService onLoad directionsService: \", directionsService);\n              },\n              onUnmount: directionsService => {\n                console.log(\"DirectionsService onUnmount directionsService: \", directionsService);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 17\n            }, this), this.state.routeResponse !== null && /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n              options: {\n                // eslint-disable-line\n                directions: this.state.routeResponse\n              },\n              onLoad: directionsRenderer => {\n                console.log(\"DirectionsRenderer onLoad directionsRenderer: \", directionsRenderer);\n              },\n              onUnmount: directionsRenderer => {\n                console.log(\"DirectionsRenderer onUnmount directionsRenderer: \", directionsRenderer);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 641,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"list\", {\n          children: this.state.DistApi\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 7\n    }, this);\n  }\n\n} // handles emission api\n\n\nclass ResultsComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      vehicleId: this.props.vehicleId,\n      routeDistance: this.props.routeDistance,\n      interval: this.props.interval,\n      emissionResult: null\n    };\n  } // fetches emission data on component mount\n\n\n  componentDidMount() {\n    let model = this.state.vehicleId; // let distance = this.state.routeDistance;\n\n    let interval = this.state.interval;\n    var distance = this.state.routeDistance;\n\n    switch (interval) {\n      case \"Daily\":\n        distance = distance;\n        break;\n\n      case \"Weekly\":\n        distance = distance * 5;\n        break;\n\n      case \"Monthly\":\n        distance = distance * 5 * 4;\n        break;\n\n      case \"Yearly\":\n        distance = distance * 5 * 4 * 12;\n        break;\n    }\n\n    console.log(\"resultscomp vehicleId:\", this.state.vehicleId);\n    const options = {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer Zjxitbl7VzuoMXlEnoMNw\t\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        type: \"vehicle\",\n        distance_unit: \"km\",\n        distance_value: distance,\n        vehicle_model_id: model,\n        emissionResult: null\n      })\n    };\n    fetch(\"https://www.carboninterface.com/api/v1/estimates\", options).then(response => response.json()).then(responseText => {\n      console.log(\"emission api response: \", responseText);\n      this.setState({\n        emissionResult: responseText.data.attributes\n      });\n    });\n  }\n\n  render() {\n    let formatResults = null;\n\n    if (this.state.emissionResult !== null) {\n      var parsed = JSON.parse(JSON.stringify(this.state.emissionResult));\n      var distance = parsed.distance_value;\n      var carbon_lb = parsed.carbon_lb;\n      var carbon_kg = parsed.carbon_kg;\n      var carbon_mt = parsed.carbon_mt;\n      var trees = Math.ceil(carbon_lb * 0.028);\n      var phones = Math.ceil(carbon_lb * 202);\n      formatResults = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [distance, \" km travelled\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [carbon_kg, \" kilograms emitted\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [carbon_mt, \" metric tons emitted\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [trees, \" trees planted\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [phones, \" phones charged\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PayPalScriptProvider, {\n          options: {\n            \"client-id\": \"AfbaYXzVZdAk46vKRzwBCG_QoBHe02_QjrFIJZpnEcVF2m-zrZv3Oa7cEShBJxgw_pPrR3RjG06g4FXF\"\n          },\n          children: /*#__PURE__*/_jsxDEV(PayPalButtons, {\n            createOrder: (data, actions) => {\n              this.setState({\n                trees: {\n                  trees\n                }\n              });\n              return actions.order.create({\n                purchase_units: [{\n                  amount: {\n                    value: trees\n                  }\n                }]\n              });\n            },\n            onApprove: async (data, actions) => {\n              const details = await actions.order.capture();\n              const name = details.payer.name.given_name;\n              alert(\"Transaction completed by \" + name);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formatResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 778,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nconst container = document.createElement(\"div\");\ndocument.body.appendChild(container);\nexport default Vehicle;","map":{"version":3,"names":["React","Component","DistanceMatrixService","LoadScript","Autocomplete","DirectionsService","DirectionsRenderer","GoogleMap","Button","Box","InputLabel","MenuItem","FormControl","Select","SelectChangeEvent","PayPalScriptProvider","PayPalButtons","Vehicle","constructor","props","componentDidMount","console","log","options","method","headers","Authorization","fetch","then","response","json","responseText","temparray","key2","push","data","setState","makes","handleCarMake","event","preventDefault","selectedmake","target","value","state","id","makename","attributes","name","models","yearom","filteredmodels","year","modelsfiltered","removeduplicates","key3","splice","handleyear","handleCarModel","vehicleid","selectedmodel","distance","body","JSON","stringify","type","distance_unit","distance_value","vehicle_model_id","emissions","handleInterval","selectedinterval","leftkeys","yeararray","intervalarray","distanceApi","autofillApi","origin","destination","route_dist","route_results","route_result_pairs","render","makeinput","map","make","yearinput","index","modelinput","model","intervalinput","interval","height","width","display","columnGap","rowGap","gridTemplateColumns","gap","DistApiComponent","input_origin","input_destination","vehicleId","distanceCallback","bind","distanceText","rows","elements","text","replace","destinations","placeId","origins","travelMode","AutocompleteApiComponent","routeResponse","DistApi","vehicle_model","origin_autocomplete","destination_autocomplete","origin_onLoad","origin_onPlaceChanged","destination_onLoad","destination_onPlaceChanged","directionsCallback","getPlace","place_id","status","lat","lng","boxSizing","border","padding","borderRadius","boxShadow","fontSize","outline","textOverflow","position","left","top","marginLeft","directionsService","directions","directionsRenderer","ResultsComponent","routeDistance","emissionResult","formatResults","parsed","parse","carbon_lb","carbon_kg","carbon_mt","trees","Math","ceil","phones","actions","order","create","purchase_units","amount","details","capture","payer","given_name","alert","container","document","createElement","appendChild"],"sources":["/Users/abhijayrana/emissioncalc/src/components/Vehicle.jsx"],"sourcesContent":["import React from \"react\";\nimport { Component } from \"react\";\nimport {\n  DistanceMatrixService,\n  LoadScript,\n  Autocomplete,\n  DirectionsService,\n  DirectionsRenderer,\n  GoogleMap,\n} from \"@react-google-maps/api\";\nimport { Button } from \"@material-ui/core\";\nimport Box from \"@mui/material/Box\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\n\nclass Vehicle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      makes: \"\",\n      models: \"\",\n      distance: \"\",\n      emissions: \"\",\n      leftkeys: \"\",\n      selectedmake: \"1\",\n      selectedmodel: \"a\",\n      makename: \"\",\n      yearom: \"a\",\n      selectedinterval: \"a\",\n      yeararray: [\n        1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991,\n        1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003,\n        2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015,\n        2016, 2017, 2018, 2019, 2020,\n      ],\n      intervalarray: [\"Daily\", \"Weekly\", \"Monthly\", \"Yearly\"],\n      modelsfiltered: \"\",\n      distanceApi: \"\",\n      autofillApi: \"\",\n      origin: \"\",\n      destination: \"\",\n      route_dist: \"\",\n      route_results: \"\",\n      route_result_pairs: \"\",\n    };\n  }\n\n  componentDidMount = async () => {\n    console.log(\"component mounted\");\n\n    //calls car makes list api\n    //aadi's token - carbon interface\n    const options = {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer Zjxitbl7VzuoMXlEnoMNw\t\",\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    fetch(\"https://www.carboninterface.com/api/v1/vehicle_makes\", options)\n      .then((response) => response.json())\n      .then((responseText) => {\n        let temparray = [];\n        for (var key2 in responseText) {\n          temparray.push(responseText[key2].data);\n        }\n\n        this.setState({ makes: temparray }, function () {});\n      });\n  };\n\n  //handles car make from drop down\n\n  handleCarMake = (event) => {\n    event.preventDefault();\n\n    //sets this.state.selectedmake = the car make\n    this.setState({ selectedmake: event.target.value });\n\n    //sorts through makes list and matches name to id\n    //then fetches models from selected make\n    for (var key2 in this.state.makes) {\n      if (this.state.makes[key2].id == event.target.value) {\n        this.setState(\n          { makename: this.state.makes[key2].attributes.name },\n          function () {\n            //console.log(this.state.makename);\n            //console.log(this.state.selectedmake);\n            const options = {\n              method: \"GET\",\n              headers: {\n                Authorization: \"Bearer Zjxitbl7VzuoMXlEnoMNw\",\n                \"Content-Type\": \"application/json\",\n              },\n            };\n            fetch(\n              `https://www.carboninterface.com/api/v1/vehicle_makes/${this.state.selectedmake}/vehicle_models`,\n              options\n            )\n              .then((response) => response.json())\n              .then((responseText) => {\n                this.setState({ models: responseText }, function () {\n                  if (this.state.yearom != \"a\") {\n                    let filteredmodels = [];\n                    for (var key2 in this.state.models) {\n                      if (\n                        this.state.models[key2].data.attributes.year ==\n                        this.state.yearom\n                      ) {\n                        filteredmodels.push(this.state.models[key2].data);\n                      } else {\n                      }\n                    }\n                    this.setState(\n                      { modelsfiltered: filteredmodels },\n                      function () {\n                        let removeduplicates = this.state.modelsfiltered;\n\n                        for (var key2 in this.state.modelsfiltered) {\n                          for (var key3 in removeduplicates) {\n                            if (\n                              this.state.modelsfiltered[key2].attributes.name ==\n                                removeduplicates[key3].attributes.name &&\n                              this.state.modelsfiltered[key2] !=\n                                removeduplicates[key3]\n                            ) {\n                              removeduplicates.splice(key3, 1);\n                            }\n                          }\n                        }\n\n                        //console.log(\"diltered\");\n                        //console.log(removeduplicates);\n                        this.setState(\n                          { modelsfiltered: removeduplicates },\n                          function () {\n                            //console.log(\"mf\");\n                            //console.log(this.state.modelsfiltered);\n                          }\n                        );\n                      }\n                    );\n                  }\n                });\n              });\n          }\n        );\n      }\n    }\n  };\n\n  // handles car year from dropdown\n\n  handleyear = (event) => {\n    //console.log(\"bruh\");\n    event.preventDefault();\n    this.setState({ yearom: event.target.value }, function () {\n      // console.log(this.state.yearom);\n      // console.log(this.state.models);\n      let filteredmodels = [];\n      for (var key2 in this.state.models) {\n        if (\n          this.state.models[key2].data.attributes.year == event.target.value\n        ) {\n          filteredmodels.push(this.state.models[key2].data);\n        } else {\n        }\n      }\n      this.setState({ modelsfiltered: filteredmodels }, function () {\n        //   console.log(\"mf\");\n        //   console.log(this.state.modelsfiltered);\n        let removeduplicates = this.state.modelsfiltered;\n\n        for (var key2 in this.state.modelsfiltered) {\n          for (var key3 in removeduplicates) {\n            if (\n              this.state.modelsfiltered[key2].attributes.name ==\n                removeduplicates[key3].attributes.name &&\n              this.state.modelsfiltered[key2] != removeduplicates[key3]\n            ) {\n              removeduplicates.splice(key3, 1);\n            }\n          }\n        }\n\n        //   console.log(\"diltered\");\n        //   console.log(removeduplicates);\n        this.setState({ modelsfiltered: removeduplicates }, function () {\n          //  console.log(\"mf\");\n          //  console.log(this.state.modelsfiltered);\n        });\n      });\n    });\n  };\n\n  // handles car model from dropdown\n\n  handleCarModel = (event) => {\n    //console.log(\"model handled\");\n    let vehicleid = event.target.value;\n    // console.log(vehicleid);\n\n    for (var key2 in this.state.modelsfiltered) {\n      // console.log(\"hi\");\n      if (this.state.modelsfiltered[key2].id == event.target.value) {\n        this.setState(\n          { selectedmodel: this.state.modelsfiltered[key2].id },\n          function () {\n            //console.log(this.state.selectedmodel);\n          }\n        );\n      }\n    }\n\n    if (this.state.distance) {\n      let distance = this.state.distance;\n\n      const options = {\n        method: \"POST\",\n        headers: {\n          Authorization: \"Bearer Zjxitbl7VzuoMXlEnoMNw\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          type: \"vehicle\",\n          distance_unit: \"km\",\n          distance_value: distance,\n          vehicle_model_id: vehicleid,\n        }),\n      };\n      fetch(\"https://www.carboninterface.com/api/v1/estimates\", options)\n        .then((response) => response.json())\n        .then((responseText) => {\n          this.setState(\n            { emissions: responseText.data.attributes },\n            function () {\n              console.log(\"Response:\");\n              console.log(this.state.emissions);\n              // let leftkeys = Object.keys(this.state.emissions);\n              // console.log(leftkeys);\n              // this.setState({ leftkeys: leftkeys });\n            }\n          );\n        });\n    }\n  };\n\n  handleInterval = (event) => {\n    this.setState({ selectedinterval: event.target.value });\n    console.log(this.state.selectedinterval);\n  };\n\n  render() {\n    let makeinput = \"\";\n    if (this.state.makes) {\n      makeinput = (\n        <div>\n          <Box sx={{}} size=\"small\">\n            <Select\n              value={this.state.selectedmake}\n              onChange={this.handleCarMake}\n              size=\"small\"\n              variant=\"outlined\"\n              sx={{}}\n            >\n              <MenuItem value=\"1\" disabled>\n                Car make\n              </MenuItem>\n              {this.state.makes.map((make) => (\n                <MenuItem key={make.id} value={make.id}>\n                  {\" \"}\n                  {make.attributes.name}{\" \"}\n                </MenuItem>\n              ))}\n            </Select>\n          </Box>\n        </div>\n      );\n    }\n\n    let yearinput = \"\";\n    if (this.state.selectedmake && this.state.selectedmake != \"1\") {\n      yearinput = (\n        <div>\n          <Box sx={{}} size=\"small\">\n            <Select\n              value={this.state.yearom}\n              onChange={this.handleyear}\n              size=\"small\"\n            >\n              <MenuItem value=\"a\" disabled>\n                Manufacturing Year\n              </MenuItem>\n              {this.state.yeararray.map((year, index) => (\n                <MenuItem key={index} value={year}>\n                  {year}\n                </MenuItem>\n              ))}\n            </Select>\n          </Box>\n        </div>\n      );\n    }\n\n    let modelinput = \"\";\n    if (this.state.modelsfiltered && this.state.yearom != \"a\") {\n      modelinput = (\n        <div>\n          <Box sx={{}} size=\"small\">\n            <Select\n              value={this.state.selectedmodel}\n              onChange={this.handleCarModel}\n              size=\"small\"\n            >\n              <MenuItem value=\"a\" disabled>\n                Car Model\n              </MenuItem>\n              {this.state.modelsfiltered.map((model) => (\n                <MenuItem key={model.id} value={model.id}>\n                  {\" \"}\n                  {model.attributes.name}{\" \"}\n                </MenuItem>\n              ))}\n            </Select>\n          </Box>\n        </div>\n      );\n    }\n\n    let intervalinput = \"\";\n    if (this.state.selectedmodel !== \"a\") {\n      intervalinput = (\n        <div>\n          <Box sx={{}} size=\"small\">\n            <Select\n              value={this.state.selectedinterval}\n              onChange={this.handleInterval}\n              size=\"small\"\n            >\n              <MenuItem value=\"a\" disabled>\n                Interval\n              </MenuItem>\n              {this.state.intervalarray.map((interval, index) => (\n                <MenuItem key={index} value={interval}>\n                  {interval}\n                </MenuItem>\n              ))}\n            </Select>\n          </Box>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"App\" style={{ height: \"100vh\", width: \"100vw\" }}>\n        <h1>Vehicle</h1>\n        <Box\n          sx={{\n            display: \"grid\",\n            columnGap: 1,\n            rowGap: 1,\n            gridTemplateColumns: \"repeat(2, 1fr)\",\n          }}\n        >\n          <list>\n            <form>\n              <Box\n                sx={{\n                  display: \"grid\",\n                  gap: 1,\n                  gridTemplateColumns: \"repeat(1, 4fr)\",\n                }}\n                style={{}}\n              >\n                <list>{makeinput}</list>\n                <list>{yearinput}</list>\n                <list>{modelinput}</list>\n                <list>{intervalinput}</list>\n              </Box>\n            </form>\n          </list>\n          <list>\n            <LoadScript\n              googleMapsApiKey=\"AIzaSyBKHL2R02wDBkDHAWv9b-mnaHmu6MmaWBc\"\n              libraries={[\"places\"]}\n            >\n              {this.state.selectedinterval !== \"a\" && (\n                <AutocompleteApiComponent\n                  vehicle_model={this.state.selectedmodel}\n                  interval={this.state.selectedinterval}\n                />\n              )}\n            </LoadScript>\n          </list>\n        </Box>\n      </div>\n    );\n  }\n}\n\n// fetches distance for route\n\nclass DistApiComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      origin: this.props.input_origin,\n      destination: this.props.input_destination,\n      distance: null,\n      interval: this.props.interval,\n      vehicleId: this.props.vehicleId,\n    };\n    this.distanceCallback = this.distanceCallback.bind(this);\n  }\n\n  // updates state when api returns distance for route\n\n  distanceCallback(response) {\n    if (response !== null && this.state.distance === null) {\n      var distanceText = response.rows[0].elements[0].distance.text;\n      this.setState({\n        distance: distanceText.replace(\",\", \"\").replace(\"km\", \"\"),\n      });\n    }\n  }\n\n  render() {\n    console.log(\"DistApiComp vehicleId:\", this.state.vehicleId);\n    return (\n      <div>\n        <DistanceMatrixService\n          options={{\n            destinations: [{ placeId: this.state.origin }],\n            origins: [{ placeId: this.state.destination }],\n            travelMode: \"DRIVING\",\n          }}\n          callback={this.distanceCallback}\n        />\n        {this.state.vehicleId !== \"a\" && this.state.distance !== null && (\n          <ResultsComponent\n            vehicleId={this.state.vehicleId}\n            routeDistance={this.state.distance}\n            interval={this.state.interval}\n          ></ResultsComponent>\n        )}\n      </div>\n    );\n  }\n}\n\n// handles map display and travel input\n\nclass AutocompleteApiComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      origin: null,\n      destination: null,\n      routeResponse: null,\n      DistApi: null,\n      interval: this.props.interval,\n      vehicle_model: this.props.vehicle_model,\n    };\n\n    this.origin_autocomplete = null;\n    this.destination_autocomplete = null;\n\n    this.origin_onLoad = this.origin_onLoad.bind(this);\n    this.origin_onPlaceChanged = this.origin_onPlaceChanged.bind(this);\n    this.destination_onLoad = this.destination_onLoad.bind(this);\n    this.destination_onPlaceChanged =\n      this.destination_onPlaceChanged.bind(this);\n    this.directionsCallback = this.directionsCallback.bind(this);\n  }\n\n  // called on origin textbox load\n\n  origin_onLoad(origin_autocomplete) {\n    console.log(\"origin autocomplete: \", origin_autocomplete);\n\n    this.origin_autocomplete = origin_autocomplete;\n  }\n\n  // called on destination textbox load\n\n  destination_onLoad(destination_autocomplete) {\n    console.log(\"destination autocomplete: \", destination_autocomplete);\n\n    this.destination_autocomplete = destination_autocomplete;\n  }\n\n  // updates state when origin input is given\n\n  origin_onPlaceChanged() {\n    if (this.origin_autocomplete != null) {\n      this.state.origin = this.origin_autocomplete.getPlace().place_id;\n      this.setState({ origin: this.origin_autocomplete.getPlace().place_id });\n      console.log(this.state.origin);\n    } else {\n      console.log(\"Autocomplete is not loaded yet!\");\n    }\n  }\n\n  // updates state when destination input is given\n\n  destination_onPlaceChanged() {\n    if (this.destination_autocomplete != null) {\n      this.state.destination =\n        this.destination_autocomplete.getPlace().place_id;\n      this.setState({\n        destination: this.destination_autocomplete.getPlace().place_id,\n      });\n      console.log(this.state.destination);\n      console.log(\n        \"AutocompleteApiComp after destination vehicleId:\",\n        this.state.vehicle_model\n      );\n      this.setState({\n        DistApi: [\n          <DistApiComponent\n            input_origin={this.state.origin}\n            input_destination={this.state.destination}\n            vehicleId={this.state.vehicle_model}\n            interval={this.state.interval}\n          ></DistApiComponent>,\n        ],\n      });\n    } else {\n      console.log(\"Autocomplete is not loaded yet!\");\n    }\n  }\n\n  // updates state when directions retrieved for showing route\n\n  directionsCallback(response) {\n    if (response !== null && this.state.routeResponse === null) {\n      if (response.status === \"OK\") {\n        this.setState({ routeResponse: response });\n      } else {\n        console.log(\"error: \", response);\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Box\n          sx={{\n            display: \"grid\",\n            columnGap: 1,\n            rowGap: 1,\n            gridTemplateColumns: \"repeat(2, 1fr)\",\n          }}\n        >\n          <list>\n            <GoogleMap\n              id=\"searchbox-example\"\n              mapContainerStyle={{ height: \"800px\", width: \"400px\" }}\n              zoom={2.5}\n              center={{ lat: 38.685, lng: -115.234 }}\n            >\n              <Autocomplete\n                onLoad={this.origin_onLoad}\n                onPlaceChanged={this.origin_onPlaceChanged}\n              >\n                <input\n                  type=\"text\"\n                  placeholder=\"Enter your origin \"\n                  style={{\n                    boxSizing: `border-box`,\n                    border: `1px solid transparent`,\n                    width: `240px`,\n                    height: `32px`,\n                    padding: `0 12px`,\n                    borderRadius: `3px`,\n                    boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n                    fontSize: `14px`,\n                    outline: `none`,\n                    textOverflow: `ellipses`,\n                    position: \"absolute\",\n                    left: \"50%\",\n                    top: \"2%\",\n                    marginLeft: \"-120px\",\n                  }}\n                />\n              </Autocomplete>\n              <Autocomplete\n                onLoad={this.destination_onLoad}\n                onPlaceChanged={this.destination_onPlaceChanged}\n              >\n                <input\n                  type=\"text\"\n                  placeholder=\"Enter your destination \"\n                  style={{\n                    boxSizing: `border-box`,\n                    border: `1px solid transparent`,\n                    width: `240px`,\n                    height: `32px`,\n                    padding: `0 12px`,\n                    borderRadius: `3px`,\n                    boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n                    fontSize: `14px`,\n                    outline: `none`,\n                    textOverflow: `ellipses`,\n                    position: \"absolute\",\n                    left: \"50%\",\n                    top: \"12%\",\n                    marginLeft: \"-120px\",\n                  }}\n                />\n              </Autocomplete>\n\n              {this.state.destination !== null && this.state.origin !== null && (\n                <DirectionsService\n                  options={{\n                    destination: { placeId: this.state.destination },\n                    origin: { placeId: this.state.origin },\n                    travelMode: \"DRIVING\",\n                  }}\n                  callback={this.directionsCallback}\n                  onLoad={(directionsService) => {\n                    console.log(\n                      \"DirectionsService onLoad directionsService: \",\n                      directionsService\n                    );\n                  }}\n                  onUnmount={(directionsService) => {\n                    console.log(\n                      \"DirectionsService onUnmount directionsService: \",\n                      directionsService\n                    );\n                  }}\n                />\n              )}\n\n              {this.state.routeResponse !== null && (\n                <DirectionsRenderer\n                  options={{\n                    // eslint-disable-line\n                    directions: this.state.routeResponse,\n                  }}\n                  onLoad={(directionsRenderer) => {\n                    console.log(\n                      \"DirectionsRenderer onLoad directionsRenderer: \",\n                      directionsRenderer\n                    );\n                  }}\n                  onUnmount={(directionsRenderer) => {\n                    console.log(\n                      \"DirectionsRenderer onUnmount directionsRenderer: \",\n                      directionsRenderer\n                    );\n                  }}\n                />\n              )}\n            </GoogleMap>\n          </list>\n          <list>{this.state.DistApi}</list>\n        </Box>\n      </div>\n    );\n  }\n}\n\n// handles emission api\n\nclass ResultsComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      vehicleId: this.props.vehicleId,\n      routeDistance: this.props.routeDistance,\n      interval: this.props.interval,\n      emissionResult: null,\n    };\n  }\n\n  // fetches emission data on component mount\n\n  componentDidMount() {\n    let model = this.state.vehicleId;\n    // let distance = this.state.routeDistance;\n    let interval = this.state.interval;\n    var distance = this.state.routeDistance;\n    switch (interval) {\n      case \"Daily\":\n        distance = distance;\n        break;\n      case \"Weekly\":\n        distance = distance * 5;\n        break;\n      case \"Monthly\":\n        distance = distance * 5 * 4;\n        break;\n      case \"Yearly\":\n        distance = distance * 5 * 4 * 12;\n        break;\n    }\n\n    console.log(\"resultscomp vehicleId:\", this.state.vehicleId);\n\n    const options = {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer Zjxitbl7VzuoMXlEnoMNw\t\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        type: \"vehicle\",\n        distance_unit: \"km\",\n        distance_value: distance,\n        vehicle_model_id: model,\n        emissionResult: null,\n      }),\n    };\n    fetch(\"https://www.carboninterface.com/api/v1/estimates\", options)\n      .then((response) => response.json())\n      .then((responseText) => {\n        console.log(\"emission api response: \", responseText);\n        this.setState({\n          emissionResult: responseText.data.attributes,\n        });\n      });\n  }\n\n  render() {\n    let formatResults = null;\n    if (this.state.emissionResult !== null) {\n      var parsed = JSON.parse(JSON.stringify(this.state.emissionResult));\n      var distance = parsed.distance_value;\n      var carbon_lb = parsed.carbon_lb;\n      var carbon_kg = parsed.carbon_kg;\n      var carbon_mt = parsed.carbon_mt;\n      var trees = Math.ceil(carbon_lb * 0.028);\n      var phones = Math.ceil(carbon_lb * 202);\n      formatResults = (\n        <div>\n          <p>{distance} km travelled</p>\n          <p>{carbon_kg} kilograms emitted</p>\n          <p>{carbon_mt} metric tons emitted</p>\n          <p>{trees} trees planted</p>\n          <p>{phones} phones charged</p>\n\n          <PayPalScriptProvider\n            options={{\n              \"client-id\":\n                \"AfbaYXzVZdAk46vKRzwBCG_QoBHe02_QjrFIJZpnEcVF2m-zrZv3Oa7cEShBJxgw_pPrR3RjG06g4FXF\",\n            }}\n          >\n            <PayPalButtons\n              createOrder={(data, actions) => {\n                this.setState({ trees: { trees } });\n                return actions.order.create({\n                  purchase_units: [\n                    {\n                      amount: {\n                        value: trees,\n                      },\n                    },\n                  ],\n                });\n              }}\n              onApprove={async (data, actions) => {\n                const details = await actions.order.capture();\n                const name = details.payer.name.given_name;\n                alert(\"Transaction completed by \" + name);\n              }}\n            />\n          </PayPalScriptProvider>\n        </div>\n      );\n    }\n\n    return <div>{formatResults}</div>;\n  }\n}\n\nconst container = document.createElement(\"div\");\ndocument.body.appendChild(container);\nexport default Vehicle;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}