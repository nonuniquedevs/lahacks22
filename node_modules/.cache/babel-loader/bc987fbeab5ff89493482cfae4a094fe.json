{"ast":null,"code":"var _jsxFileName = \"/Users/abhijayrana/emissioncalc/src/components/Electricity.jsx\";\nimport React, { Component } from \"react\"; // import {\n//   DistanceMatrixService,\n//   LoadScript,\n//   Autocomplete,\n//   DirectionsService,\n//   DirectionsRenderer,\n//   GoogleMap,\n// } from \"@react-google-maps/api\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Electricity extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"that's a lot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n\n} // class AutocompleteApiComponent extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       origin: null,\n//       routeResponse: null,\n//       DistApi: null,\n//       interval: this.props.interval,\n//       vehicle_model: this.props.vehicle_model,\n//     };\n//     this.origin_autocomplete = null;\n//     this.origin_onLoad = this.origin_onLoad.bind(this);\n//     this.origin_onPlaceChanged = this.origin_onPlaceChanged.bind(this);\n//     this.directionsCallback = this.directionsCallback.bind(this);\n//   }\n//   // called on origin textbox load\n//   origin_onLoad(origin_autocomplete) {\n//     console.log(\"origin autocomplete: \", origin_autocomplete);\n//     this.origin_autocomplete = origin_autocomplete;\n//   }\n//   // updates state when origin input is given\n//   origin_onPlaceChanged() {\n//     if (this.origin_autocomplete != null) {\n//       this.state.origin = this.origin_autocomplete.getPlace().place_id;\n//       this.setState({ origin: this.origin_autocomplete.getPlace().place_id });\n//       console.log(this.state.origin);\n//     } else {\n//       console.log(\"Autocomplete is not loaded yet!\");\n//     }\n//   }\n//   // updates state when destination input is given\n//   // updates state when directions retrieved for showing route\n//   directionsCallback(response) {\n//     if (response !== null && this.state.routeResponse === null) {\n//       if (response.status === \"OK\") {\n//         this.setState({ routeResponse: response });\n//       } else {\n//         console.log(\"error: \", response);\n//       }\n//     }\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <GoogleMap\n//           id=\"searchbox-example\"\n//           mapContainerStyle={{ height: \"400px\", width: \"800px\" }}\n//           zoom={2.5}\n//           center={{ lat: 38.685, lng: -115.234 }}\n//         >\n//           <Autocomplete\n//             onLoad={this.origin_onLoad}\n//             onPlaceChanged={this.origin_onPlaceChanged}\n//           >\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter your origin \"\n//               style={{\n//                 boxSizing: `border-box`,\n//                 border: `1px solid transparent`,\n//                 width: `240px`,\n//                 height: `32px`,\n//                 padding: `0 12px`,\n//                 borderRadius: `3px`,\n//                 boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n//                 fontSize: `14px`,\n//                 outline: `none`,\n//                 textOverflow: `ellipses`,\n//                 position: \"absolute\",\n//                 left: \"50%\",\n//                 top: \"2%\",\n//                 marginLeft: \"-120px\",\n//               }}\n//             />\n//           </Autocomplete>\n//           {this.state.destination !== null && this.state.origin !== null && (\n//             <DirectionsService\n//               options={{\n//                 destination: { placeId: this.state.destination },\n//                 origin: { placeId: this.state.origin },\n//                 travelMode: \"DRIVING\",\n//               }}\n//               callback={this.directionsCallback}\n//               onLoad={(directionsService) => {\n//                 console.log(\n//                   \"DirectionsService onLoad directionsService: \",\n//                   directionsService\n//                 );\n//               }}\n//               onUnmount={(directionsService) => {\n//                 console.log(\n//                   \"DirectionsService onUnmount directionsService: \",\n//                   directionsService\n//                 );\n//               }}\n//             />\n//           )}\n//           {this.state.routeResponse !== null && (\n//             <DirectionsRenderer\n//               options={{\n//                 // eslint-disable-line\n//                 directions: this.state.routeResponse,\n//               }}\n//               onLoad={(directionsRenderer) => {\n//                 console.log(\n//                   \"DirectionsRenderer onLoad directionsRenderer: \",\n//                   directionsRenderer\n//                 );\n//               }}\n//               onUnmount={(directionsRenderer) => {\n//                 console.log(\n//                   \"DirectionsRenderer onUnmount directionsRenderer: \",\n//                   directionsRenderer\n//                 );\n//               }}\n//             />\n//           )}\n//         </GoogleMap>\n//         {this.state.DistApi}\n//       </div>\n//     );\n//   }\n// }\n\n\nexport default Electricity; //5jZcrsh80m5rNVA6jDymhmBbJSExZBqNkgZtSW2N","map":{"version":3,"names":["React","Component","Electricity","render"],"sources":["/Users/abhijayrana/emissioncalc/src/components/Electricity.jsx"],"sourcesContent":["import React, { Component } from \"react\";\n// import {\n//   DistanceMatrixService,\n//   LoadScript,\n//   Autocomplete,\n//   DirectionsService,\n//   DirectionsRenderer,\n//   GoogleMap,\n// } from \"@react-google-maps/api\";\n\nclass Electricity extends Component {\n  render() {\n    return (\n      <div>\n        <p>that's a lot</p>\n        {/* <LoadScript\n          googleMapsApiKey=\"AIzaSyBKHL2R02wDBkDHAWv9b-mnaHmu6MmaWBc\"\n          libraries={[\"places\"]}\n        >\n          <AutocompleteApiComponent/>\n        </LoadScript> */}\n      </div>\n    );\n  }\n}\n\n// class AutocompleteApiComponent extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       origin: null,\n//       routeResponse: null,\n//       DistApi: null,\n//       interval: this.props.interval,\n//       vehicle_model: this.props.vehicle_model,\n//     };\n\n//     this.origin_autocomplete = null;\n\n//     this.origin_onLoad = this.origin_onLoad.bind(this);\n//     this.origin_onPlaceChanged = this.origin_onPlaceChanged.bind(this);\n//     this.directionsCallback = this.directionsCallback.bind(this);\n//   }\n\n//   // called on origin textbox load\n\n//   origin_onLoad(origin_autocomplete) {\n//     console.log(\"origin autocomplete: \", origin_autocomplete);\n\n//     this.origin_autocomplete = origin_autocomplete;\n//   }\n\n//   // updates state when origin input is given\n\n//   origin_onPlaceChanged() {\n//     if (this.origin_autocomplete != null) {\n//       this.state.origin = this.origin_autocomplete.getPlace().place_id;\n//       this.setState({ origin: this.origin_autocomplete.getPlace().place_id });\n//       console.log(this.state.origin);\n//     } else {\n//       console.log(\"Autocomplete is not loaded yet!\");\n//     }\n//   }\n\n//   // updates state when destination input is given\n\n//   // updates state when directions retrieved for showing route\n\n//   directionsCallback(response) {\n//     if (response !== null && this.state.routeResponse === null) {\n//       if (response.status === \"OK\") {\n//         this.setState({ routeResponse: response });\n//       } else {\n//         console.log(\"error: \", response);\n//       }\n//     }\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <GoogleMap\n//           id=\"searchbox-example\"\n//           mapContainerStyle={{ height: \"400px\", width: \"800px\" }}\n//           zoom={2.5}\n//           center={{ lat: 38.685, lng: -115.234 }}\n//         >\n//           <Autocomplete\n//             onLoad={this.origin_onLoad}\n//             onPlaceChanged={this.origin_onPlaceChanged}\n//           >\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter your origin \"\n//               style={{\n//                 boxSizing: `border-box`,\n//                 border: `1px solid transparent`,\n//                 width: `240px`,\n//                 height: `32px`,\n//                 padding: `0 12px`,\n//                 borderRadius: `3px`,\n//                 boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n//                 fontSize: `14px`,\n//                 outline: `none`,\n//                 textOverflow: `ellipses`,\n//                 position: \"absolute\",\n//                 left: \"50%\",\n//                 top: \"2%\",\n//                 marginLeft: \"-120px\",\n//               }}\n//             />\n//           </Autocomplete>\n\n//           {this.state.destination !== null && this.state.origin !== null && (\n//             <DirectionsService\n//               options={{\n//                 destination: { placeId: this.state.destination },\n//                 origin: { placeId: this.state.origin },\n//                 travelMode: \"DRIVING\",\n//               }}\n//               callback={this.directionsCallback}\n//               onLoad={(directionsService) => {\n//                 console.log(\n//                   \"DirectionsService onLoad directionsService: \",\n//                   directionsService\n//                 );\n//               }}\n//               onUnmount={(directionsService) => {\n//                 console.log(\n//                   \"DirectionsService onUnmount directionsService: \",\n//                   directionsService\n//                 );\n//               }}\n//             />\n//           )}\n\n//           {this.state.routeResponse !== null && (\n//             <DirectionsRenderer\n//               options={{\n//                 // eslint-disable-line\n//                 directions: this.state.routeResponse,\n//               }}\n//               onLoad={(directionsRenderer) => {\n//                 console.log(\n//                   \"DirectionsRenderer onLoad directionsRenderer: \",\n//                   directionsRenderer\n//                 );\n//               }}\n//               onUnmount={(directionsRenderer) => {\n//                 console.log(\n//                   \"DirectionsRenderer onUnmount directionsRenderer: \",\n//                   directionsRenderer\n//                 );\n//               }}\n//             />\n//           )}\n//         </GoogleMap>\n//         {this.state.DistApi}\n//       </div>\n//     );\n//   }\n// }\n\nexport default Electricity;\n\n//5jZcrsh80m5rNVA6jDymhmBbJSExZBqNkgZtSW2N\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;EAClCE,MAAM,GAAG;IACP,oBACE;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAWD;;AAbiC,C,CAgBpeAAeD,WAAf,C,CAEA"},"metadata":{},"sourceType":"module"}