{"ast":null,"code":"var _jsxFileName = \"/Users/abhijayrana/emissioncalc/src/components/Vehicle.jsx\";\nimport React from \"react\";\nimport { Component } from \"react\";\nimport { DistanceMatrixService, LoadScript, Autocomplete, DirectionsService, DirectionsRenderer, GoogleMap } from \"@react-google-maps/api\";\nimport { Button } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Vehicle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      console.log(\"component mounted\"); //calls car makes list api\n      //aadi's token - carbon interface\n\n      const options = {\n        method: \"GET\",\n        headers: {\n          Authorization: \"Bearer 5tNfPXfVrKecROWIDgvSg\",\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      fetch(\"https://www.carboninterface.com/api/v1/vehicle_makes\", options).then(response => response.json()).then(responseText => {\n        let temparray = [];\n\n        for (var key2 in responseText) {\n          temparray.push(responseText[key2].data);\n        }\n\n        this.setState({\n          makes: temparray\n        }, function () {});\n      });\n    };\n\n    this.handleCarMake = event => {\n      event.preventDefault(); //sets this.state.selectedmake = the car make\n\n      this.setState({\n        selectedmake: event.target.value\n      }); //sorts through makes list and matches name to id\n      //then fetches models from selected make\n\n      for (var key2 in this.state.makes) {\n        if (this.state.makes[key2].id == event.target.value) {\n          this.setState({\n            makename: this.state.makes[key2].attributes.name\n          }, function () {\n            //console.log(this.state.makename);\n            //console.log(this.state.selectedmake);\n            const options = {\n              method: \"GET\",\n              headers: {\n                Authorization: \"Bearer 5tNfPXfVrKecROWIDgvSg\",\n                \"Content-Type\": \"application/json\"\n              }\n            };\n            fetch(`https://www.carboninterface.com/api/v1/vehicle_makes/${this.state.selectedmake}/vehicle_models`, options).then(response => response.json()).then(responseText => {\n              this.setState({\n                models: responseText\n              }, function () {\n                if (this.state.yearom != \"a\") {\n                  let filteredmodels = [];\n\n                  for (var key2 in this.state.models) {\n                    if (this.state.models[key2].data.attributes.year == this.state.yearom) {\n                      filteredmodels.push(this.state.models[key2].data);\n                    } else {}\n                  }\n\n                  this.setState({\n                    modelsfiltered: filteredmodels\n                  }, function () {\n                    let removeduplicates = this.state.modelsfiltered;\n\n                    for (var key2 in this.state.modelsfiltered) {\n                      for (var key3 in removeduplicates) {\n                        if (this.state.modelsfiltered[key2].attributes.name == removeduplicates[key3].attributes.name && this.state.modelsfiltered[key2] != removeduplicates[key3]) {\n                          removeduplicates.splice(key3, 1);\n                        }\n                      }\n                    } //console.log(\"diltered\");\n                    //console.log(removeduplicates);\n\n\n                    this.setState({\n                      modelsfiltered: removeduplicates\n                    }, function () {//console.log(\"mf\");\n                      //console.log(this.state.modelsfiltered);\n                    });\n                  });\n                }\n              });\n            });\n          });\n        }\n      }\n    };\n\n    this.handleyear = event => {\n      //console.log(\"bruh\");\n      event.preventDefault();\n      this.setState({\n        yearom: event.target.value\n      }, function () {\n        // console.log(this.state.yearom);\n        // console.log(this.state.models);\n        let filteredmodels = [];\n\n        for (var key2 in this.state.models) {\n          if (this.state.models[key2].data.attributes.year == event.target.value) {\n            filteredmodels.push(this.state.models[key2].data);\n          } else {}\n        }\n\n        this.setState({\n          modelsfiltered: filteredmodels\n        }, function () {\n          //   console.log(\"mf\");\n          //   console.log(this.state.modelsfiltered);\n          let removeduplicates = this.state.modelsfiltered;\n\n          for (var key2 in this.state.modelsfiltered) {\n            for (var key3 in removeduplicates) {\n              if (this.state.modelsfiltered[key2].attributes.name == removeduplicates[key3].attributes.name && this.state.modelsfiltered[key2] != removeduplicates[key3]) {\n                removeduplicates.splice(key3, 1);\n              }\n            }\n          } //   console.log(\"diltered\");\n          //   console.log(removeduplicates);\n\n\n          this.setState({\n            modelsfiltered: removeduplicates\n          }, function () {//  console.log(\"mf\");\n            //  console.log(this.state.modelsfiltered);\n          });\n        });\n      });\n    };\n\n    this.handleCarModel = event => {\n      //console.log(\"model handled\");\n      let vehicleid = event.target.value; // console.log(vehicleid);\n\n      for (var key2 in this.state.modelsfiltered) {\n        // console.log(\"hi\");\n        if (this.state.modelsfiltered[key2].id == event.target.value) {\n          this.setState({\n            selectedmodel: this.state.modelsfiltered[key2].id\n          }, function () {//console.log(this.state.selectedmodel);\n          });\n        }\n      }\n\n      if (this.state.distance) {\n        let distance = this.state.distance;\n        const options = {\n          method: \"POST\",\n          headers: {\n            Authorization: \"Bearer 5tNfPXfVrKecROWIDgvSg\",\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            type: \"vehicle\",\n            distance_unit: \"km\",\n            distance_value: distance,\n            vehicle_model_id: vehicleid\n          })\n        };\n        fetch(\"https://www.carboninterface.com/api/v1/estimates\", options).then(response => response.json()).then(responseText => {\n          this.setState({\n            emissions: responseText.data.attributes\n          }, function () {\n            console.log(\"Response:\");\n            console.log(this.state.emissions); // let leftkeys = Object.keys(this.state.emissions);\n            // console.log(leftkeys);\n            // this.setState({ leftkeys: leftkeys });\n          });\n        });\n      }\n    };\n\n    this.handleInterval = event => {\n      this.setState({\n        selectedinterval: event.target.value\n      });\n      console.log(this.state.selectedinterval);\n    };\n\n    this.state = {\n      makes: \"\",\n      models: \"\",\n      distance: \"\",\n      emissions: \"\",\n      leftkeys: \"\",\n      selectedmake: \"1\",\n      selectedmodel: \"a\",\n      makename: \"\",\n      yearom: \"a\",\n      selectedinterval: \"a\",\n      yeararray: [1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020],\n      intervalarray: [\"Daily\", \"Weekly\", \"Monthly\", \"Yearly\"],\n      modelsfiltered: \"\",\n      distanceApi: \"\",\n      autofillApi: \"\",\n      origin: \"\",\n      destination: \"\",\n      route_dist: \"\",\n      route_results: \"\",\n      route_result_pairs: \"\"\n    };\n  }\n\n  render() {\n    let makeinput = \"\";\n\n    if (this.state.makes) {\n      makeinput = /*#__PURE__*/_jsxDEV(\"select\", {\n        value: this.state.selectedmake,\n        onChange: this.handleCarMake,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          disabled: true,\n          children: \"Select your car make\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), this.state.makes.map(make => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: make.id,\n          children: [\" \", make.attributes.name, \" \"]\n        }, make.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this);\n    }\n\n    let yearinput = \"\";\n\n    if (this.state.selectedmake && this.state.selectedmake != \"1\") {\n      yearinput = /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\" \", \"Year of Manufacturing:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: this.state.yearom,\n          onChange: this.handleyear,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"a\",\n            disabled: true,\n            children: \"Select the year of manufacturing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), this.state.yeararray.map((year, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: year,\n            children: year\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this);\n    }\n\n    let modelinput = \"\";\n\n    if (this.state.modelsfiltered && this.state.yearom != \"a\") {\n      modelinput = /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\" \", \"Car Model:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: this.state.selectedmodel,\n          onChange: this.handleCarModel,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"a\",\n            disabled: true,\n            children: \"Select your car model\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), this.state.modelsfiltered.map(model => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: model.id,\n            children: [\" \", model.attributes.name, \" \"]\n          }, model.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this);\n    }\n\n    let intervalinput = \"\";\n\n    if (this.state.selectedmodel !== 'a') {\n      intervalinput = /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\" \", \"Interval:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: this.state.selectedinterval,\n          onChange: this.handleInterval,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"a\",\n            disabled: true,\n            children: \"Select your interval\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this), this.state.intervalarray.map((interval, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: interval,\n            children: interval\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      style: {\n        paddingTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Vehicle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Car make:\", makeinput]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this), yearinput, modelinput, intervalinput]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoadScript, {\n        googleMapsApiKey: \"AIzaSyBKHL2R02wDBkDHAWv9b-mnaHmu6MmaWBc\",\n        libraries: [\"places\"],\n        children: this.state.selectedinterval !== \"a\" && /*#__PURE__*/_jsxDEV(AutocompleteApiComponent, {\n          vehicle_model: this.state.selectedmodel,\n          interval: this.state.selectedinterval\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this);\n  }\n\n} // fetches distance for route\n\n\nclass DistApiComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      origin: this.props.input_origin,\n      destination: this.props.input_destination,\n      distance: null,\n      interval: this.props.interval,\n      vehicleId: this.props.vehicleId\n    };\n    this.distanceCallback = this.distanceCallback.bind(this);\n  } // updates state when api returns distance for route\n\n\n  distanceCallback(response) {\n    if (response !== null && this.state.distance === null) {\n      var distanceText = response.rows[0].elements[0].distance.text;\n      this.setState({\n        distance: distanceText.replace(\",\", \"\").replace(\"km\", \"\")\n      });\n    }\n  }\n\n  render() {\n    console.log(\"DistApiComp vehicleId:\", this.state.vehicleId);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(DistanceMatrixService, {\n        options: {\n          destinations: [{\n            placeId: this.state.origin\n          }],\n          origins: [{\n            placeId: this.state.destination\n          }],\n          travelMode: \"DRIVING\"\n        },\n        callback: this.distanceCallback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this), this.state.vehicleId !== \"a\" && this.state.distance !== null && /*#__PURE__*/_jsxDEV(ResultsComponent, {\n        vehicleId: this.state.vehicleId,\n        routeDistance: this.state.distance,\n        interval: this.state.interval\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 7\n    }, this);\n  }\n\n} // handles map display and travel input\n\n\nclass AutocompleteApiComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      origin: null,\n      destination: null,\n      routeResponse: null,\n      DistApi: null,\n      interval: this.props.interval,\n      vehicle_model: this.props.vehicle_model\n    };\n    this.origin_autocomplete = null;\n    this.destination_autocomplete = null;\n    this.origin_onLoad = this.origin_onLoad.bind(this);\n    this.origin_onPlaceChanged = this.origin_onPlaceChanged.bind(this);\n    this.destination_onLoad = this.destination_onLoad.bind(this);\n    this.destination_onPlaceChanged = this.destination_onPlaceChanged.bind(this);\n    this.directionsCallback = this.directionsCallback.bind(this);\n  } // called on origin textbox load\n\n\n  origin_onLoad(origin_autocomplete) {\n    console.log(\"origin autocomplete: \", origin_autocomplete);\n    this.origin_autocomplete = origin_autocomplete;\n  } // called on destination textbox load\n\n\n  destination_onLoad(destination_autocomplete) {\n    console.log(\"destination autocomplete: \", destination_autocomplete);\n    this.destination_autocomplete = destination_autocomplete;\n  } // updates state when origin input is given\n\n\n  origin_onPlaceChanged() {\n    if (this.origin_autocomplete != null) {\n      this.state.origin = this.origin_autocomplete.getPlace().place_id;\n      this.setState({\n        origin: this.origin_autocomplete.getPlace().place_id\n      });\n      console.log(this.state.origin);\n    } else {\n      console.log(\"Autocomplete is not loaded yet!\");\n    }\n  } // updates state when destination input is given\n\n\n  destination_onPlaceChanged() {\n    if (this.destination_autocomplete != null) {\n      this.state.destination = this.destination_autocomplete.getPlace().place_id;\n      this.setState({\n        destination: this.destination_autocomplete.getPlace().place_id\n      });\n      console.log(this.state.destination);\n      console.log(\"AutocompleteApiComp after destination vehicleId:\", this.state.vehicle_model);\n      this.setState({\n        DistApi: [/*#__PURE__*/_jsxDEV(DistApiComponent, {\n          input_origin: this.state.origin,\n          input_destination: this.state.destination,\n          vehicleId: this.state.vehicle_model,\n          interval: this.state.interval\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 11\n        }, this)]\n      });\n    } else {\n      console.log(\"Autocomplete is not loaded yet!\");\n    }\n  } // updates state when directions retrieved for showing route\n\n\n  directionsCallback(response) {\n    if (response !== null && this.state.routeResponse === null) {\n      if (response.status === \"OK\") {\n        this.setState({\n          routeResponse: response\n        });\n      } else {\n        console.log(\"error: \", response);\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(GoogleMap, {\n        id: \"searchbox-example\",\n        mapContainerStyle: {\n          height: \"400px\",\n          width: \"800px\"\n        },\n        zoom: 2.5,\n        center: {\n          lat: 38.685,\n          lng: -115.234\n        },\n        children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n          onLoad: this.origin_onLoad,\n          onPlaceChanged: this.origin_onPlaceChanged,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter your origin \",\n            style: {\n              boxSizing: `border-box`,\n              border: `1px solid transparent`,\n              width: `240px`,\n              height: `32px`,\n              padding: `0 12px`,\n              borderRadius: `3px`,\n              boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n              fontSize: `14px`,\n              outline: `none`,\n              textOverflow: `ellipses`,\n              position: \"absolute\",\n              left: \"50%\",\n              top: \"2%\",\n              marginLeft: \"-120px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          onLoad: this.destination_onLoad,\n          onPlaceChanged: this.destination_onPlaceChanged,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter your destination \",\n            style: {\n              boxSizing: `border-box`,\n              border: `1px solid transparent`,\n              width: `240px`,\n              height: `32px`,\n              padding: `0 12px`,\n              borderRadius: `3px`,\n              boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n              fontSize: `14px`,\n              outline: `none`,\n              textOverflow: `ellipses`,\n              position: \"absolute\",\n              left: \"50%\",\n              top: \"12%\",\n              marginLeft: \"-120px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 11\n        }, this), this.state.destination !== null && this.state.origin !== null && /*#__PURE__*/_jsxDEV(DirectionsService, {\n          options: {\n            destination: {\n              placeId: this.state.destination\n            },\n            origin: {\n              placeId: this.state.origin\n            },\n            travelMode: \"DRIVING\"\n          },\n          callback: this.directionsCallback,\n          onLoad: directionsService => {\n            console.log(\"DirectionsService onLoad directionsService: \", directionsService);\n          },\n          onUnmount: directionsService => {\n            console.log(\"DirectionsService onUnmount directionsService: \", directionsService);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 13\n        }, this), this.state.routeResponse !== null && /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n          options: {\n            // eslint-disable-line\n            directions: this.state.routeResponse\n          },\n          onLoad: directionsRenderer => {\n            console.log(\"DirectionsRenderer onLoad directionsRenderer: \", directionsRenderer);\n          },\n          onUnmount: directionsRenderer => {\n            console.log(\"DirectionsRenderer onUnmount directionsRenderer: \", directionsRenderer);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 9\n      }, this), this.state.DistApi]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 7\n    }, this);\n  }\n\n} // handles emission api\n\n\nclass ResultsComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      vehicleId: this.props.vehicleId,\n      routeDistance: this.props.routeDistance,\n      interval: this.props.interval,\n      emissionResult: null\n    };\n  } // fetches emission data on component mount\n\n\n  componentDidMount() {\n    let model = this.state.vehicleId; // let distance = this.state.routeDistance;\n\n    let interval = this.state.interval;\n    var distance = this.state.routeDistance;\n\n    switch (interval) {\n      case \"Daily\":\n        distance = distance;\n        break;\n\n      case \"Weekly\":\n        distance = distance * 5;\n        break;\n\n      case \"Monthly\":\n        distance = distance * 5 * 4;\n        break;\n\n      case \"Yearly\":\n        distance = distance * 5 * 4 * 12;\n        break;\n    }\n\n    console.log(\"resultscomp vehicleId:\", this.state.vehicleId);\n    const options = {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer 5tNfPXfVrKecROWIDgvSg\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        type: \"vehicle\",\n        distance_unit: \"km\",\n        distance_value: distance,\n        vehicle_model_id: model,\n        emissionResult: null\n      })\n    };\n    fetch(\"https://www.carboninterface.com/api/v1/estimates\", options).then(response => response.json()).then(responseText => {\n      console.log(\"emission api response: \", responseText);\n      this.setState({\n        emissionResult: responseText.data.attributes\n      });\n    });\n  }\n\n  render() {\n    let formatResults = null;\n\n    if (this.state.emissionResult !== null) {\n      var parsed = JSON.parse(JSON.stringify(this.state.emissionResult));\n      var distance = parsed.distance_value;\n      var carbon_lb = parsed.carbon_lb;\n      var carbon_kg = parsed.carbon_kg;\n      var carbon_mt = parsed.carbon_mt;\n      var trees = Math.ceil(carbon_lb * 0.028);\n      var phones = Math.ceil(carbon_lb * 202);\n      formatResults = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [distance, \" km travelled\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [carbon_kg, \" kilograms emitted\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [carbon_mt, \" metric tons emitted\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [trees, \" trees planted\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [phones, \" phones charged\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formatResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst container = document.createElement(\"div\");\ndocument.body.appendChild(container);\nexport default Vehicle;","map":{"version":3,"names":["React","Component","DistanceMatrixService","LoadScript","Autocomplete","DirectionsService","DirectionsRenderer","GoogleMap","Button","Vehicle","constructor","props","componentDidMount","console","log","options","method","headers","Authorization","fetch","then","response","json","responseText","temparray","key2","push","data","setState","makes","handleCarMake","event","preventDefault","selectedmake","target","value","state","id","makename","attributes","name","models","yearom","filteredmodels","year","modelsfiltered","removeduplicates","key3","splice","handleyear","handleCarModel","vehicleid","selectedmodel","distance","body","JSON","stringify","type","distance_unit","distance_value","vehicle_model_id","emissions","handleInterval","selectedinterval","leftkeys","yeararray","intervalarray","distanceApi","autofillApi","origin","destination","route_dist","route_results","route_result_pairs","render","makeinput","map","make","yearinput","index","modelinput","model","intervalinput","interval","paddingTop","DistApiComponent","input_origin","input_destination","vehicleId","distanceCallback","bind","distanceText","rows","elements","text","replace","destinations","placeId","origins","travelMode","AutocompleteApiComponent","routeResponse","DistApi","vehicle_model","origin_autocomplete","destination_autocomplete","origin_onLoad","origin_onPlaceChanged","destination_onLoad","destination_onPlaceChanged","directionsCallback","getPlace","place_id","status","height","width","lat","lng","boxSizing","border","padding","borderRadius","boxShadow","fontSize","outline","textOverflow","position","left","top","marginLeft","directionsService","directions","directionsRenderer","ResultsComponent","routeDistance","emissionResult","formatResults","parsed","parse","carbon_lb","carbon_kg","carbon_mt","trees","Math","ceil","phones","container","document","createElement","appendChild"],"sources":["/Users/abhijayrana/emissioncalc/src/components/Vehicle.jsx"],"sourcesContent":["import React from \"react\";\nimport { Component } from \"react\";\nimport {\n  DistanceMatrixService,\n  LoadScript,\n  Autocomplete,\n  DirectionsService,\n  DirectionsRenderer,\n  GoogleMap,\n} from \"@react-google-maps/api\";\nimport { Button } from \"@material-ui/core\";\n\nclass Vehicle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      makes: \"\",\n      models: \"\",\n      distance: \"\",\n      emissions: \"\",\n      leftkeys: \"\",\n      selectedmake: \"1\",\n      selectedmodel: \"a\",\n      makename: \"\",\n      yearom: \"a\",\n      selectedinterval: \"a\",\n      yeararray: [\n        1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991,\n        1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003,\n        2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015,\n        2016, 2017, 2018, 2019, 2020,\n      ],\n      intervalarray: [\n        \"Daily\",\n        \"Weekly\",\n        \"Monthly\",\n        \"Yearly\"\n      ],\n      modelsfiltered: \"\",\n      distanceApi: \"\",\n      autofillApi: \"\",\n      origin: \"\",\n      destination: \"\",\n      route_dist: \"\",\n      route_results: \"\",\n      route_result_pairs: \"\",\n    };\n  }\n\n  componentDidMount = async () => {\n    console.log(\"component mounted\");\n\n    //calls car makes list api\n    //aadi's token - carbon interface\n    const options = {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer 5tNfPXfVrKecROWIDgvSg\",\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    fetch(\"https://www.carboninterface.com/api/v1/vehicle_makes\", options)\n      .then((response) => response.json())\n      .then((responseText) => {\n        let temparray = [];\n        for (var key2 in responseText) {\n          temparray.push(responseText[key2].data);\n        }\n\n        this.setState({ makes: temparray }, function () {});\n      });\n  };\n\n  //handles car make from drop down\n\n  handleCarMake = (event) => {\n    event.preventDefault();\n\n    //sets this.state.selectedmake = the car make\n    this.setState({ selectedmake: event.target.value });\n\n    //sorts through makes list and matches name to id\n    //then fetches models from selected make\n    for (var key2 in this.state.makes) {\n      if (this.state.makes[key2].id == event.target.value) {\n        this.setState(\n          { makename: this.state.makes[key2].attributes.name },\n          function () {\n            //console.log(this.state.makename);\n            //console.log(this.state.selectedmake);\n            const options = {\n              method: \"GET\",\n              headers: {\n                Authorization: \"Bearer 5tNfPXfVrKecROWIDgvSg\",\n                \"Content-Type\": \"application/json\",\n              },\n            };\n            fetch(\n              `https://www.carboninterface.com/api/v1/vehicle_makes/${this.state.selectedmake}/vehicle_models`,\n              options\n            )\n              .then((response) => response.json())\n              .then((responseText) => {\n                this.setState({ models: responseText }, function () {\n                  if (this.state.yearom != \"a\") {\n                    let filteredmodels = [];\n                    for (var key2 in this.state.models) {\n                      if (\n                        this.state.models[key2].data.attributes.year ==\n                        this.state.yearom\n                      ) {\n                        filteredmodels.push(this.state.models[key2].data);\n                      } else {\n                      }\n                    }\n                    this.setState(\n                      { modelsfiltered: filteredmodels },\n                      function () {\n                        let removeduplicates = this.state.modelsfiltered;\n\n                        for (var key2 in this.state.modelsfiltered) {\n                          for (var key3 in removeduplicates) {\n                            if (\n                              this.state.modelsfiltered[key2].attributes.name ==\n                                removeduplicates[key3].attributes.name &&\n                              this.state.modelsfiltered[key2] !=\n                                removeduplicates[key3]\n                            ) {\n                              removeduplicates.splice(key3, 1);\n                            }\n                          }\n                        }\n\n                        //console.log(\"diltered\");\n                        //console.log(removeduplicates);\n                        this.setState(\n                          { modelsfiltered: removeduplicates },\n                          function () {\n                            //console.log(\"mf\");\n                            //console.log(this.state.modelsfiltered);\n                          }\n                        );\n                      }\n                    );\n                  }\n                });\n              });\n          }\n        );\n      }\n    }\n  };\n\n  // handles car year from dropdown\n\n  handleyear = (event) => {\n    //console.log(\"bruh\");\n    event.preventDefault();\n    this.setState({ yearom: event.target.value }, function () {\n      // console.log(this.state.yearom);\n      // console.log(this.state.models);\n      let filteredmodels = [];\n      for (var key2 in this.state.models) {\n        if (\n          this.state.models[key2].data.attributes.year == event.target.value\n        ) {\n          filteredmodels.push(this.state.models[key2].data);\n        } else {\n        }\n      }\n      this.setState({ modelsfiltered: filteredmodels }, function () {\n        //   console.log(\"mf\");\n        //   console.log(this.state.modelsfiltered);\n        let removeduplicates = this.state.modelsfiltered;\n\n        for (var key2 in this.state.modelsfiltered) {\n          for (var key3 in removeduplicates) {\n            if (\n              this.state.modelsfiltered[key2].attributes.name ==\n                removeduplicates[key3].attributes.name &&\n              this.state.modelsfiltered[key2] != removeduplicates[key3]\n            ) {\n              removeduplicates.splice(key3, 1);\n            }\n          }\n        }\n\n        //   console.log(\"diltered\");\n        //   console.log(removeduplicates);\n        this.setState({ modelsfiltered: removeduplicates }, function () {\n          //  console.log(\"mf\");\n          //  console.log(this.state.modelsfiltered);\n        });\n      });\n    });\n  };\n\n  // handles car model from dropdown\n\n  handleCarModel = (event) => {\n    //console.log(\"model handled\");\n    let vehicleid = event.target.value;\n    // console.log(vehicleid);\n\n    for (var key2 in this.state.modelsfiltered) {\n      // console.log(\"hi\");\n      if (this.state.modelsfiltered[key2].id == event.target.value) {\n        this.setState(\n          { selectedmodel: this.state.modelsfiltered[key2].id },\n          function () {\n            //console.log(this.state.selectedmodel);\n          }\n        );\n      }\n    }\n\n    if (this.state.distance) {\n      let distance = this.state.distance;\n\n      const options = {\n        method: \"POST\",\n        headers: {\n          Authorization: \"Bearer 5tNfPXfVrKecROWIDgvSg\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          type: \"vehicle\",\n          distance_unit: \"km\",\n          distance_value: distance,\n          vehicle_model_id: vehicleid,\n        }),\n      };\n      fetch(\"https://www.carboninterface.com/api/v1/estimates\", options)\n        .then((response) => response.json())\n        .then((responseText) => {\n          this.setState(\n            { emissions: responseText.data.attributes },\n            function () {\n              console.log(\"Response:\");\n              console.log(this.state.emissions);\n              // let leftkeys = Object.keys(this.state.emissions);\n              // console.log(leftkeys);\n              // this.setState({ leftkeys: leftkeys });\n            }\n          );\n        });\n    }\n  };\n\n  handleInterval = (event) => {\n    this.setState({ selectedinterval: event.target.value })\n    console.log(this.state.selectedinterval)\n  }\n\n  render() {\n    let makeinput = \"\";\n    if (this.state.makes) {\n      makeinput = (\n        <select value={this.state.selectedmake} onChange={this.handleCarMake}>\n          <option value=\"1\" disabled>\n            Select your car make\n          </option>\n          {this.state.makes.map((make) => (\n            <option key={make.id} value={make.id}>\n              {\" \"}\n              {make.attributes.name}{\" \"}\n            </option>\n          ))}\n        </select>\n      );\n    }\n\n    let yearinput = \"\";\n    if (this.state.selectedmake && this.state.selectedmake != \"1\") {\n      yearinput = (\n        <label>\n          {\" \"}\n          Year of Manufacturing:\n          <select value={this.state.yearom} onChange={this.handleyear}>\n            <option value=\"a\" disabled>\n              Select the year of manufacturing\n            </option>\n            {this.state.yeararray.map((year, index) => (\n              <option key={index} value={year}>\n                {year}\n              </option>\n            ))}\n          </select>\n        </label>\n      );\n    }\n\n    let modelinput = \"\";\n    if (this.state.modelsfiltered && this.state.yearom != \"a\") {\n      modelinput = (\n        <label>\n          {\" \"}\n          Car Model:\n          <select\n            value={this.state.selectedmodel}\n            onChange={this.handleCarModel}\n          >\n            <option value=\"a\" disabled>\n              Select your car model\n            </option>\n            {this.state.modelsfiltered.map((model) => (\n              <option key={model.id} value={model.id}>\n                {\" \"}\n                {model.attributes.name}{\" \"}\n              </option>\n            ))}\n          </select>\n        </label>\n      );\n    }\n\n    let intervalinput = \"\";\n    if (this.state.selectedmodel !== 'a') {\n      intervalinput = (\n        <label>\n          {\" \"}\n          Interval:\n          <select\n            value={this.state.selectedinterval}\n            onChange={this.handleInterval}\n          >\n            <option value=\"a\" disabled>\n              Select your interval\n            </option>\n            {this.state.intervalarray.map((interval, index) => (\n              <option key={index} value={interval}>\n                {interval}\n              </option>\n            ))}\n          </select>\n        </label>\n      )\n    }\n\n\n    return (\n      <div className=\"App\" style={{ paddingTop: \"20px\" }}>\n        <h1>Vehicle</h1>\n        <form>\n          <label>\n            Car make:\n            {makeinput}\n          </label>\n          {yearinput}\n          {modelinput}\n          {intervalinput}\n        </form>\n        <LoadScript\n          googleMapsApiKey=\"AIzaSyBKHL2R02wDBkDHAWv9b-mnaHmu6MmaWBc\"\n          libraries={[\"places\"]}\n        >\n          {this.state.selectedinterval !== \"a\" && (\n            <AutocompleteApiComponent\n              vehicle_model={this.state.selectedmodel}\n              interval={this.state.selectedinterval}\n            />\n          )}\n        </LoadScript>\n      </div>\n    );\n  }\n}\n\n// fetches distance for route\n\nclass DistApiComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      origin: this.props.input_origin,\n      destination: this.props.input_destination,\n      distance: null,\n      interval: this.props.interval,\n      vehicleId: this.props.vehicleId,\n    };\n    this.distanceCallback = this.distanceCallback.bind(this);\n  }\n\n  // updates state when api returns distance for route\n\n  distanceCallback(response) {\n    if (response !== null && this.state.distance === null) {\n      var distanceText = response.rows[0].elements[0].distance.text;\n      this.setState({\n        distance: distanceText.replace(\",\", \"\").replace(\"km\", \"\"),\n      });\n    }\n  }\n\n  render() {\n    console.log(\"DistApiComp vehicleId:\", this.state.vehicleId);\n    return (\n      <div>\n        <DistanceMatrixService\n          options={{\n            destinations: [{ placeId: this.state.origin }],\n            origins: [{ placeId: this.state.destination }],\n            travelMode: \"DRIVING\",\n          }}\n          callback={this.distanceCallback}\n        />\n        {this.state.vehicleId !== \"a\" && this.state.distance !== null && (\n          <ResultsComponent\n            vehicleId={this.state.vehicleId}\n            routeDistance={this.state.distance}\n            interval={this.state.interval}\n          ></ResultsComponent>\n        )}\n      </div>\n    );\n  }\n}\n\n// handles map display and travel input\n\nclass AutocompleteApiComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      origin: null,\n      destination: null,\n      routeResponse: null,\n      DistApi: null,\n      interval: this.props.interval,\n      vehicle_model: this.props.vehicle_model,\n    };\n\n    this.origin_autocomplete = null;\n    this.destination_autocomplete = null;\n\n    this.origin_onLoad = this.origin_onLoad.bind(this);\n    this.origin_onPlaceChanged = this.origin_onPlaceChanged.bind(this);\n    this.destination_onLoad = this.destination_onLoad.bind(this);\n    this.destination_onPlaceChanged =\n      this.destination_onPlaceChanged.bind(this);\n    this.directionsCallback = this.directionsCallback.bind(this);\n  }\n\n  // called on origin textbox load\n\n  origin_onLoad(origin_autocomplete) {\n    console.log(\"origin autocomplete: \", origin_autocomplete);\n\n    this.origin_autocomplete = origin_autocomplete;\n  }\n\n  // called on destination textbox load\n\n  destination_onLoad(destination_autocomplete) {\n    console.log(\"destination autocomplete: \", destination_autocomplete);\n\n    this.destination_autocomplete = destination_autocomplete;\n  }\n\n  // updates state when origin input is given\n\n  origin_onPlaceChanged() {\n    if (this.origin_autocomplete != null) {\n      this.state.origin = this.origin_autocomplete.getPlace().place_id;\n      this.setState({ origin: this.origin_autocomplete.getPlace().place_id });\n      console.log(this.state.origin);\n    } else {\n      console.log(\"Autocomplete is not loaded yet!\");\n    }\n  }\n\n  // updates state when destination input is given\n\n  destination_onPlaceChanged() {\n    if (this.destination_autocomplete != null) {\n      this.state.destination =\n        this.destination_autocomplete.getPlace().place_id;\n      this.setState({\n        destination: this.destination_autocomplete.getPlace().place_id,\n      });\n      console.log(this.state.destination);\n      console.log(\n        \"AutocompleteApiComp after destination vehicleId:\",\n        this.state.vehicle_model\n      );\n      this.setState({\n        DistApi: [\n          <DistApiComponent\n            input_origin={this.state.origin}\n            input_destination={this.state.destination}\n            vehicleId={this.state.vehicle_model}\n            interval={this.state.interval}\n          ></DistApiComponent>,\n        ],\n      });\n    } else {\n      console.log(\"Autocomplete is not loaded yet!\");\n    }\n  }\n\n  // updates state when directions retrieved for showing route\n\n  directionsCallback(response) {\n    if (response !== null && this.state.routeResponse === null) {\n      if (response.status === \"OK\") {\n        this.setState({ routeResponse: response });\n      } else {\n        console.log(\"error: \", response);\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <GoogleMap\n          id=\"searchbox-example\"\n          mapContainerStyle={{ height: \"400px\", width: \"800px\" }}\n          zoom={2.5}\n          center={{ lat: 38.685, lng: -115.234 }}\n        >\n          <Autocomplete\n            onLoad={this.origin_onLoad}\n            onPlaceChanged={this.origin_onPlaceChanged}\n          >\n            <input\n              type=\"text\"\n              placeholder=\"Enter your origin \"\n              style={{\n                boxSizing: `border-box`,\n                border: `1px solid transparent`,\n                width: `240px`,\n                height: `32px`,\n                padding: `0 12px`,\n                borderRadius: `3px`,\n                boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n                fontSize: `14px`,\n                outline: `none`,\n                textOverflow: `ellipses`,\n                position: \"absolute\",\n                left: \"50%\",\n                top: \"2%\",\n                marginLeft: \"-120px\",\n              }}\n            />\n          </Autocomplete>\n          <Autocomplete\n            onLoad={this.destination_onLoad}\n            onPlaceChanged={this.destination_onPlaceChanged}\n          >\n            <input\n              type=\"text\"\n              placeholder=\"Enter your destination \"\n              style={{\n                boxSizing: `border-box`,\n                border: `1px solid transparent`,\n                width: `240px`,\n                height: `32px`,\n                padding: `0 12px`,\n                borderRadius: `3px`,\n                boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n                fontSize: `14px`,\n                outline: `none`,\n                textOverflow: `ellipses`,\n                position: \"absolute\",\n                left: \"50%\",\n                top: \"12%\",\n                marginLeft: \"-120px\",\n              }}\n            />\n          </Autocomplete>\n\n          {this.state.destination !== null && this.state.origin !== null && (\n            <DirectionsService\n              options={{\n                destination: { placeId: this.state.destination },\n                origin: { placeId: this.state.origin },\n                travelMode: \"DRIVING\",\n              }}\n              callback={this.directionsCallback}\n              onLoad={(directionsService) => {\n                console.log(\n                  \"DirectionsService onLoad directionsService: \",\n                  directionsService\n                );\n              }}\n              onUnmount={(directionsService) => {\n                console.log(\n                  \"DirectionsService onUnmount directionsService: \",\n                  directionsService\n                );\n              }}\n            />\n          )}\n\n          {this.state.routeResponse !== null && (\n            <DirectionsRenderer\n              options={{\n                // eslint-disable-line\n                directions: this.state.routeResponse,\n              }}\n              onLoad={(directionsRenderer) => {\n                console.log(\n                  \"DirectionsRenderer onLoad directionsRenderer: \",\n                  directionsRenderer\n                );\n              }}\n              onUnmount={(directionsRenderer) => {\n                console.log(\n                  \"DirectionsRenderer onUnmount directionsRenderer: \",\n                  directionsRenderer\n                );\n              }}\n            />\n          )}\n        </GoogleMap>\n        {this.state.DistApi}\n      </div>\n    );\n  }\n}\n\n// handles emission api\n\nclass ResultsComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      vehicleId: this.props.vehicleId,\n      routeDistance: this.props.routeDistance,\n      interval: this.props.interval,\n      emissionResult: null,\n    };\n  }\n\n  // fetches emission data on component mount\n\n  componentDidMount() {\n    let model = this.state.vehicleId;\n    // let distance = this.state.routeDistance;\n    let interval = this.state.interval;\n    var distance = this.state.routeDistance;\n    switch (interval) {\n      case \"Daily\":\n        distance = distance;\n        break;\n      case \"Weekly\":\n        distance = distance * 5;\n        break;\n      case \"Monthly\":\n        distance = distance * 5 * 4;\n        break;\n      case \"Yearly\":\n        distance = distance * 5 * 4 * 12;\n        break;\n    }\n\n\n    console.log(\"resultscomp vehicleId:\", this.state.vehicleId);\n\n    const options = {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer 5tNfPXfVrKecROWIDgvSg\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        type: \"vehicle\",\n        distance_unit: \"km\",\n        distance_value: distance,\n        vehicle_model_id: model,\n        emissionResult: null,\n      }),\n    };\n    fetch(\"https://www.carboninterface.com/api/v1/estimates\", options)\n      .then((response) => response.json())\n      .then((responseText) => {\n        console.log(\"emission api response: \", responseText);\n        this.setState({\n          emissionResult: responseText.data.attributes,\n        });\n      });\n  }\n\n  render() {\n\n    let formatResults = null;\n    if (this.state.emissionResult !== null) {\n      var parsed = JSON.parse(JSON.stringify(this.state.emissionResult));\n      var distance = parsed.distance_value;\n      var carbon_lb = parsed.carbon_lb\n      var carbon_kg = parsed.carbon_kg\n      var carbon_mt = parsed.carbon_mt\n      var trees = Math.ceil(carbon_lb * 0.028)\n      var phones = Math.ceil(carbon_lb * 202)\n      \n      formatResults = (\n        <div>\n          <p>{distance} km travelled</p>\n          <p>{carbon_kg} kilograms emitted</p>\n          <p>{carbon_mt} metric tons emitted</p>\n          <p>{trees} trees planted</p>\n          <p>{phones} phones charged</p>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {formatResults}\n      </div>\n    );\n  }\n}\n\nconst container = document.createElement(\"div\");\ndocument.body.appendChild(container);\nexport default Vehicle;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}